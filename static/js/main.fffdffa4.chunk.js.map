{"version":3,"sources":["pages/profile.module.css","components/ingredients-nav/ingredients-nav.module.css","components/ingredients-section/ingredients-section.module.css","components/error-indicator/error-indicator.module.css","pages/home.module.css","components/nav/nav.module.css","components/modal-overlay/modal-overlay.module.css","components/app/app.module.css","services/middleware/socketMiddleware.ts","services/types/hooks.ts","services/action-constants/access.ts","utils/constants.ts","utils/utils.ts","services/thunks/access.ts","components/protected-route/protected-route.tsx","services/action-constants/ingredients.ts","components/constructor-item/constructor-item.tsx","services/action-constants/order.ts","services/action-constants/modal.ts","components/burger-constructor/burger-constructor.tsx","services/thunks/order.ts","components/ingredients-nav/ingredients-nav.tsx","components/item-cart/item-cart.tsx","components/ingredients-section/ingredients-section.tsx","components/burger-ingredients/burger-ingredients.tsx","components/error-indicator/error-indicator.tsx","components/spinner/spinner.tsx","pages/home.tsx","services/action-creators.ts","pages/login.tsx","pages/register.tsx","pages/forgot-password.tsx","pages/reset-password.tsx","pages/profile-inputs.tsx","components/ingredient-icon/ingredient-icon.tsx","components/order-block/order-block.tsx","services/action-constants/ws.ts","components/orders-list/orders-list.tsx","pages/order-history.tsx","pages/profile.tsx","pages/not-found-404.tsx","components/stats/stats.tsx","pages/feed.tsx","components/ingredients-line/ingredients-line.tsx","components/order-stats/order-stats.tsx","pages/order-stats.tsx","components/nav-button/nav-button.tsx","components/nav/nav.tsx","components/auth/auth.tsx","components/app-header/app-header.tsx","components/fact/fact.tsx","components/ingredient-details/ingredient-details.tsx","images/done.png","components/order-details/order-details.tsx","components/modal-overlay/modal-overlay.tsx","components/modal/modal.tsx","components/app/app.tsx","services/thunks/ingredients.ts","services/reducers/ingredients.ts","services/reducers/order.ts","services/reducers/modal.ts","services/reducers/access.ts","services/reducers/ws.ts","services/reducers/index.ts","services/store.ts","index.tsx","components/burger-constructor/burger-constructor.module.css","components/order-block/order-block.module.css","components/stats/stats.module.css","components/order-stats/order-stats.module.css","components/ingredient-details/ingredient-details.module.css","components/item-cart/item-cart.module.css","components/orders-list/orders-list.module.css","components/ingredients-line/ingredients-line.module.css","components/order-details/order-details.module.css","components/constructor-item/constructor-item.module.css","components/ingredient-icon/ingredient-icon.module.css","pages/page.module.css","components/fact/fact.module.css","components/app-header/app-header.module.css","components/burger-ingredients/burger-ingredients.module.css","components/spinner/spinner.module.css","components/nav-button/nav-button.module.css","components/modal/modal.module.css"],"names":["module","exports","wsActions","useSelector","selectorHook","useDispatch","dispatchHook","SET_NAME","SET_EMAIL","SET_LOGIN","SET_PASSWORD","SET_RESTORE_EMAIL","REGISTER_USER_REQUEST","REGISTER_USER_SUCCESS","REGISTER_USER_FAILED","LOGIN_USER_REQUEST","LOGIN_USER_SUCCESS","LOGIN_USER_FAILED","UPDATE_USER_DATA_REQUEST","UPDATE_USER_DATA_SUCCESS","UPDATE_USER_DATA_FAILED","CANCEL_UPDATE_USER_DATA","RESTORE_PASSWORD_REQUEST","RESTORE_PASSWORD_SUCCESS","RESTORE_PASSWORD_FAILED","GET_NEW_PASSWORD_REQUEST","GET_NEW_PASSWORD_SUCCESS","GET_NEW_PASSWORD_FAILED","SET_NEW_PASSWORD","SET_RESTORE_CODE","REFRESH_TOKEN_REQUEST","REFRESH_TOKEN_SUCCESS","REFRESH_TOKEN_FAILED","LOGOUT_USER_REQUEST","LOGOUT_USER_SUCCESS","LOGOUT_USER_FAILED","BASE_URL","WS_ORDERS","DEFAULT_ORDER_DATA","setCookie","name","value","document","cookie","checkResponse","res","ok","json","then","err","Promise","reject","fetchWithRefresh","url","options","a","fetch","message","method","headers","body","JSON","stringify","token","localStorage","updateData","setItem","refreshToken","accessToken","authorization","getTime","createdTime","created","Date","time","getHours","getMinutes","msInMinute","msInDay","todayDate","todayLeft","yesterdayLeft","left","daysBefore","Math","floor","day","getDay","getUserData","methodType","userData","dispatch","match","type","data","success","Error","user","ProtectedRoute","children","rest","isAccessTokenExist","indexOf","isRefreshTokenExist","undefined","render","location","to","pathname","state","from","GET_INGREDIENTS_REQUEST","GET_INGREDIENTS_SUCCESS","GET_INGREDIENTS_FAILED","SET_CURRENT_INGREDIENT","ADD_INGREDIENT","ADD_BUN","DELETE_INGREDIENT","RESET_CURRENT_INGREDIENT","MOVE_INGREDIENT","CLEAR_CONSTRUCTOR_INGREDIENTS","SET_INGREDIENTS_TAB","ConstructorItem","props","id","isBun","index","moveCard","start","ref","useRef","useDrop","accept","collect","monitor","handlerId","getHandlerId","hover","item","current","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","setTimeout","drop","useDrag","isDragging","opacity","drag","className","styles","constructorItem","bun","settings","handleClose","onDelete","SEND_ORDER_REQUEST","SEND_ORDER_SUCCESS","SEND_ORDER_FAILED","RESET_ORDER_REQUEST","SET_MODAL_DATA","SET_MODAL_ERROR","CLOSE_MODAL","BurgerConstructor","constructorIngredients","store","ingredients","useLocation","history","useHistory","onDropBun","itemId","isHoverNeeded","length","isBunHover","isOver","dropTargetTopBun","dropTargetBottomBun","isIngredientHover","dropIngredientsTarget","totalPrice","reduce","accum","product","price","getBun","items","position","descr","find","text","isLocked","thumbnail","image","useCallback","ingredientHover","listHover","burgerConstructor","bunTop","list","map","slice","i","_id","bunBottom","total","totalPriceBlock","size","onClick","findIndex","orderURL","orderBody","mode","title","sendOrder","replace","background","push","IngredientsNav","onTabClick","tabs","tab","ratio","active","ItemCart","itemName","itemPrice","itemImage","amount","isDrag","dragRef","link","itemCart","itemCartContainer","src","alt","count","IngredientsSection","React","forwardRef","ingredientsData","useInView","threshold","refDnd","inView","entry","useEffect","intersectionRatio","e","li","target","closest","dataset","sauce","main","ingredientsList","forEach","element","BurgerIngredients","bunRef","sauceRef","mainRef","typeToTitle","titleToRef","blocks","Object","keys","key","elem","createIngredientsBlocks","burgerIngredients","scrollIntoView","behavior","block","ErrorIndicator","errorIndicator","Spinner","spinner","HomePage","ingredientsRequest","ingredientsFailed","DndProvider","backend","HTML5Backend","dictNameToType","email","password","login","code","dispatchData","payload","LoginPage","access","loginRequest","logoutRequest","setValue","onSubmit","loginUser","container","inputLarge","placeholder","onChange","icon","questions","question","RegisterPage","registerRequest","registerNewUser","ForgotPasswordPage","changePasswordRequest","changePasswordEmail","changePasswordMessage","restoreUrl","preventDefault","emailBody","ResetPasswordPage","newPassword","restoreCode","newPasswordRequest","passwordBody","ProfileInputsPage","onFormClick","clickName","nativeEvent","submitter","innerText","buttons","IngredientIcon","shiftRatio","shift","overlay","width","height","OrderBlock","number","createdAt","status","bunFlag","images","Array","Set","image_mobile","sort","orderBlock","meta","date","statusDone","done","pending","info","icons","priceBlock","WS_CONNECTION_START","WS_CONNECTION_SUCCESS","WS_CONNECTION_ERROR","WS_CONNECTION_CLOSED","WS_GET_ORDERS","OrdersList","useRouteMatch","wsUrl","isTokenExist","wsUrlToken","split","orders","ws","isProfile","fullFeed","wide","order","wideLink","OrderHistoryPage","ProfilePage","path","profile","navBar","profileList","profileListItem","exact","profileLink","activeClassName","activeNavItem","tokenBody","toUTCString","removeItem","textExtra","NotFound404","Stats","totalToday","doneOrders","filter","inProgressOrders","getTotalSection","ready","totalTitle","getNumberSection","numbers","allNumbers","num","inProgress","stats","FeedPage","feed","content","IngredientsLine","ingredientId","ingredientsLine","itemData","OrderStats","params","Number","orderStats","result","collapseList","ingredientData","OrderStatsPage","orderStatsPage","NavButton","logo","dictLogoToImg","burger","getType","currentIngredient","isExact","navButton","Nav","nav","Auth","AppHeader","appHeader","appHeaderContainer","Fact","w","fact","IngredientDetails","useParams","ingredient","keyToTabNameMap","calories","proteins","fat","carbohydrates","center","box","titleContainer","ingredientDetails","image_large","nutritionFacts","pop","createFactsArray","OrderDetails","modalData","modal","orderRequest","description","extra","orderNum","loading","orderDetails","ModalOverlay","onClose","root","getElementById","Modal","handleKeyPress","addEventListener","removeEventListener","tabIndex","close","ReactDOM","createPortal","App","ModalSwitch","onModalClose","ingredientsURL","app","initialIngredientsState","initialOrderState","orderData","orderFailed","initialModalState","modalMode","modalTitle","hasModalError","modalVisible","initialAccessState","registerFailed","loginFailed","userDataRequest","userDataFailed","changePasswordFailed","newPasswordFailed","refreshTokenRequest","refreshTokenFailed","logoutFailed","logoutMessage","initialState","wsConnected","rootReducer","combineReducers","action","currentItem","itemIndex","newConstructorIngredients","dragCard","hoverCard","wsInit","wsSendOrder","onOpen","onError","onMessage","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","socket","next","WebSocket","onopen","onerror","onmessage","parsedData","parse","onclose","send","createStore","StrictMode"],"mappings":"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","file":"static/js/main.fffdffa4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile_profile__15guJ\",\"navBar\":\"profile_navBar__2FxXe\",\"profileList\":\"profile_profileList__1McAm\",\"profileListItem\":\"profile_profileListItem__oMkId\",\"profileLink\":\"profile_profileLink__2dWWY\",\"activeNavItem\":\"profile_activeNavItem__1E7v9\",\"textExtra\":\"profile_textExtra__bsXXd\",\"container\":\"profile_container__1udmV\",\"inputLarge\":\"profile_inputLarge__1RH-w\",\"buttons\":\"profile_buttons__2qY6J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ingredients-nav_list__GFBQf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredientsList\":\"ingredients-section_ingredientsList__1ectN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorIndicator\":\"error-indicator_errorIndicator__4rGUd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"home_main__ENIW-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"nav_nav__17CZt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"modal-overlay_overlay__2NhgE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__12xX7\"};","import type { Middleware, MiddlewareAPI } from \"redux\";\r\nimport type { AppDispatch, RootState } from '../types';\r\n\r\nimport { TWSActions } from '../../utils/types';\r\nimport { TWSOrdersActions } from \"../actions/ws\";\r\nimport { TApplicationActions } from '../types';\r\nimport { parse } from \"path\";\r\n\r\nexport const socketMiddleware = (wsActions: TWSActions): Middleware => {\r\n    return ((store: MiddlewareAPI) => {\r\n        let socket: WebSocket | null = null;\r\n\r\n        return next => (action) => {\r\n            const { dispatch } = store;\r\n            const { \r\n                wsInit, wsSendOrder, onOpen, onClose, onError, onMessage \r\n            } = wsActions;\r\n            const { type, payload } = action;\r\n\r\n            if(type === wsInit){\r\n                socket = new WebSocket(payload);\r\n            }\r\n            if(type === onClose && socket){\r\n                socket.close();\r\n            }\r\n            if(socket){\r\n                socket.onopen = e => {\r\n                    dispatch({\r\n                        type: onOpen,\r\n                        payload: e\r\n                    });\r\n                };\r\n                socket.onerror = e => {\r\n                    dispatch({\r\n                        type: onError,\r\n                        payload: e\r\n                    });\r\n                };\r\n                socket.onmessage = e => {\r\n                    const { data } = e;\r\n                    const parsedData = JSON.parse(data);\r\n                    const { success, ...rest } = parsedData;\r\n                    dispatch({\r\n                        type: onMessage,\r\n                        payload: rest\r\n                    });\r\n                };\r\n                socket.onclose = e => {\r\n                    dispatch({\r\n                        type: onClose,\r\n                        payload: e\r\n                    });\r\n                };\r\n                \r\n                if(type === wsSendOrder){\r\n                    const message = payload;\r\n                    socket.send(JSON.stringify(message));\r\n                }\r\n            }\r\n            next(action);\r\n        };\r\n    }) as Middleware;\r\n}","import {\r\n    TypedUseSelectorHook,\r\n    useSelector as selectorHook,\r\n    useDispatch as dispatchHook\r\n} from 'react-redux';\r\n\r\nimport { RootState, AppDispatch, AppThunk } from '.';\r\n\r\nexport const useSelector: TypedUseSelectorHook<RootState> = selectorHook;\r\nexport const useDispatch = () => dispatchHook<AppDispatch | AppThunk>();","export const SET_NAME: 'SET_NAME' = 'SET_NAME';\r\nexport const SET_EMAIL: 'SET_EMAIL' = 'SET_EMAIL';\r\nexport const SET_LOGIN: 'SET_LOGIN' = 'SET_LOGIN';\r\nexport const SET_PASSWORD: 'SET_PASSWORD' = 'SET_PASSWORD';\r\nexport const SET_RESTORE_EMAIL: 'SET_RESTORE_EMAIL' = 'SET_RESTORE_EMAIL';\r\nexport const REGISTER_USER_REQUEST: 'REGISTER_USER_REQUEST' = 'REGISTER_USER_REQUEST';\r\nexport const REGISTER_USER_SUCCESS: 'REGISTER_USER_SUCCESS' = 'REGISTER_USER_SUCCESS';\r\nexport const REGISTER_USER_FAILED: 'REGISTER_USER_FAILED' = 'REGISTER_USER_FAILED';\r\nexport const LOGIN_USER_REQUEST: 'LOGIN_USER_REQUEST' = 'LOGIN_USER_REQUEST';\r\nexport const LOGIN_USER_SUCCESS: 'LOGIN_USER_SUCCESS' = 'LOGIN_USER_SUCCESS';\r\nexport const LOGIN_USER_FAILED: 'LOGIN_USER_FAILED' = 'LOGIN_USER_FAILED';\r\nexport const UPDATE_USER_DATA_REQUEST: 'UPDATE_USER_DATA_REQUEST' = 'UPDATE_USER_DATA_REQUEST';\r\nexport const UPDATE_USER_DATA_SUCCESS: 'UPDATE_USER_DATA_SUCCESS' = 'UPDATE_USER_DATA_SUCCESS';\r\nexport const UPDATE_USER_DATA_FAILED: 'UPDATE_USER_DATA_FAILED' = 'UPDATE_USER_DATA_FAILED';\r\nexport const CANCEL_UPDATE_USER_DATA: 'CANCEL_UPDATE_USER_DATA' = 'CANCEL_UPDATE_USER_DATA';\r\nexport const RESTORE_PASSWORD_REQUEST: 'RESTORE_PASSWORD_REQUEST' = 'RESTORE_PASSWORD_REQUEST';\r\nexport const RESTORE_PASSWORD_SUCCESS: 'RESTORE_PASSWORD_SUCCESS' = 'RESTORE_PASSWORD_SUCCESS';\r\nexport const RESTORE_PASSWORD_FAILED: 'RESTORE_PASSWORD_FAILED' = 'RESTORE_PASSWORD_FAILED';\r\nexport const GET_NEW_PASSWORD_REQUEST: 'RESTORE_PASSWORD_FAILED' = 'RESTORE_PASSWORD_FAILED';\r\nexport const GET_NEW_PASSWORD_SUCCESS: 'RESTORE_PASSWORD_FAILED' = 'RESTORE_PASSWORD_FAILED';\r\nexport const GET_NEW_PASSWORD_FAILED: 'RESTORE_PASSWORD_FAILED' = 'RESTORE_PASSWORD_FAILED';\r\nexport const SET_NEW_PASSWORD: 'SET_NEW_PASSWORD' = 'SET_NEW_PASSWORD';\r\nexport const SET_RESTORE_CODE: 'SET_RESTORE_CODE' = 'SET_RESTORE_CODE';\r\nexport const REFRESH_TOKEN_REQUEST: 'REFRESH_TOKEN_REQUEST' = 'REFRESH_TOKEN_REQUEST';\r\nexport const REFRESH_TOKEN_SUCCESS: 'REFRESH_TOKEN_SUCCESS' = 'REFRESH_TOKEN_SUCCESS';\r\nexport const REFRESH_TOKEN_FAILED: 'REFRESH_TOKEN_FAILED' = 'REFRESH_TOKEN_FAILED';\r\nexport const LOGOUT_USER_REQUEST: 'LOGOUT_USER_REQUEST' = 'LOGOUT_USER_REQUEST';\r\nexport const LOGOUT_USER_SUCCESS: 'LOGOUT_USER_SUCCESS' = 'LOGOUT_USER_SUCCESS';\r\nexport const LOGOUT_USER_FAILED: 'LOGOUT_USER_FAILED' = 'LOGOUT_USER_FAILED';","export const BASE_URL: string = 'https://norma.nomoreparties.space/api';\r\nexport const ORDER_URL: string = '/orders';\r\nexport const INGREDIENTS_URL: string = '/ingredients';\r\nexport const WS_ORDERS: string = 'wss://norma.nomoreparties.space/orders';\r\n\r\ntype TOrderData = {\r\n  num: string;\r\n  description: string;\r\n  extra: string;\r\n};\r\n\r\nexport const DEFAULT_ORDER_DATA: TOrderData = {\r\n  num: '034536',\r\n  description: 'Ваш заказ начали готовить', \r\n  extra: 'Дождитесь готовности на орбитальной станции'\r\n};","import { BASE_URL } from \"./constants\";\r\nimport { TDict } from './types';\r\n\r\ntype TFetchOptions = {\r\n  method: string;\r\n  headers: TDict<string>;\r\n  body: string;\r\n}\r\n\r\nexport const setCookie = (name: string, value: string) => \r\n    document.cookie = `${name}=${value}`;\r\n\r\nexport const deleteCookie = (name: string) =>\r\n    document.cookie = `${name}=;Expires=${new Date(0).toUTCString()}`;\r\n\r\nexport const checkResponse = (res: Response) => {\r\n  return res.ok ? \r\n      res.json() :\r\n      res.json().then((err: any) => Promise.reject(err));\r\n}\r\n\r\nexport const updateToken = () => {\r\n  return fetch(`${BASE_URL}/auth/token`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({\r\n      token: localStorage['refreshToken']\r\n    })\r\n  })\r\n  .then(checkResponse);\r\n}\r\n\r\nexport const fetchWithRefresh = async (url: string, options: TFetchOptions) => {\r\n  try{\r\n      const res = await fetch(url, options);\r\n      return await checkResponse(res);\r\n  }\r\n  catch(err: any){\r\n      if(err.message === 'jwt expired'){\r\n          const updateData = await updateToken();\r\n          localStorage.setItem('refreshToken', updateData.refreshToken);\r\n          setCookie('accessToken', updateData.accessToken);\r\n          options.headers.authorization = updateData.accessToken;\r\n          const res = await fetch(url, options)\r\n          return await checkResponse(res);\r\n      }\r\n      else{\r\n          return Promise.reject(err);\r\n      }\r\n  }\r\n}\r\n\r\nexport const getTime = (createdTime: string) => {\r\n    const created = new Date(createdTime);\r\n    const time = `${created.getHours()}:${\r\n        created.getMinutes() < 10 ? \"0\" + created.getMinutes() : created.getMinutes()\r\n    }`;\r\n    const msInMinute = 60 * 1000;\r\n    const msInDay = msInMinute * 60 * 24;\r\n\r\n    const todayDate = new Date();\r\n    const todayLeft = todayDate.getHours() * msInMinute * 60 + todayDate.getMinutes() * msInMinute;\r\n    const yesterdayLeft = todayLeft + msInDay;\r\n\r\n    const left = todayDate.getTime() - created.getTime();\r\n\r\n    const daysBefore = Math.floor((todayDate.getTime() - created.getTime())/msInDay);\r\n    \r\n    const getDayForm = (day: number): string => {\r\n        return day % 10 === 1 ? 'день' :\r\n            day % 10 >= 2 && day % 10 <= 4 && day !== 12 && day !== 13 && day !== 14 ? \r\n            'дня' : 'дней'; \r\n    }\r\n\r\n    const getDay = () => {\r\n        return left < todayLeft ? 'Сегодня' : \r\n               left < yesterdayLeft ? 'Вчера' : \r\n               `${daysBefore} ${getDayForm(daysBefore)} назад`;\r\n    }\r\n\r\n    return `${getDay()}, ${time} i-GMT+3`;\r\n}","import {\r\n    REGISTER_USER_REQUEST,\r\n    REGISTER_USER_SUCCESS,\r\n    REGISTER_USER_FAILED,\r\n    LOGIN_USER_REQUEST,\r\n    LOGIN_USER_SUCCESS,\r\n    LOGIN_USER_FAILED,\r\n    UPDATE_USER_DATA_REQUEST,\r\n    UPDATE_USER_DATA_SUCCESS,\r\n    UPDATE_USER_DATA_FAILED,\r\n    RESTORE_PASSWORD_REQUEST,\r\n    RESTORE_PASSWORD_SUCCESS,\r\n    RESTORE_PASSWORD_FAILED,\r\n    GET_NEW_PASSWORD_REQUEST,\r\n    GET_NEW_PASSWORD_SUCCESS,\r\n    GET_NEW_PASSWORD_FAILED,\r\n    REFRESH_TOKEN_REQUEST,\r\n    REFRESH_TOKEN_SUCCESS,\r\n    REFRESH_TOKEN_FAILED,\r\n    LOGOUT_USER_REQUEST,\r\n    LOGOUT_USER_SUCCESS,\r\n    LOGOUT_USER_FAILED\r\n} from '../action-constants/access';\r\n\r\nimport { BASE_URL } from '../../utils/constants';\r\nimport {\r\n    fetchWithRefresh, checkResponse, setCookie, deleteCookie\r\n} from '../../utils/utils';\r\nimport { AppThunk, AppDispatch } from '../types';\r\n\r\nexport const restorePassword: AppThunk = (restoreUrl, email) => {\r\n    return async (dispatch: AppDispatch) => {\r\n        const emailBody = { email };\r\n\r\n        try{\r\n            dispatch({ \r\n                type: RESTORE_PASSWORD_REQUEST \r\n            });\r\n            const res = await fetch(`${BASE_URL}${restoreUrl}`, {\r\n                method: 'POST',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify(emailBody)\r\n            })\r\n\r\n            const data = await checkResponse(res);\r\n            \r\n            dispatch({\r\n                type: RESTORE_PASSWORD_SUCCESS,\r\n                message: data.message\r\n            });\r\n        }\r\n        catch(err){\r\n            dispatch({\r\n                type: RESTORE_PASSWORD_FAILED\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport const getNewPassword: AppThunk = (restoreUrl, password, token) => {\r\n    return async (dispatch: AppDispatch) => {\r\n        const passwordBody = { password, token };\r\n\r\n        try{\r\n            dispatch({\r\n                type: GET_NEW_PASSWORD_REQUEST\r\n            });\r\n\r\n            const res = await fetch(`${BASE_URL}${restoreUrl}`, {\r\n                method: 'POST',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify(passwordBody)\r\n            });\r\n\r\n            const data = await checkResponse(res);\r\n\r\n            dispatch({\r\n                type: GET_NEW_PASSWORD_SUCCESS,\r\n                message: data.message\r\n            });\r\n        }\r\n        catch(err){\r\n            dispatch({\r\n                type: GET_NEW_PASSWORD_FAILED\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const registerNewUser: AppThunk = (userData) => {\r\n    return async (dispatch: AppDispatch) => {\r\n        try{\r\n            dispatch({\r\n                type: REGISTER_USER_REQUEST\r\n            });\r\n\r\n            const res = await fetch(`${BASE_URL}/auth/register`, {\r\n                method: 'POST',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify(userData)\r\n            })\r\n\r\n            const data = await checkResponse(res);\r\n\r\n            localStorage.setItem('refreshToken', data.refreshToken);\r\n            setCookie('accessToken', data.accessToken);\r\n            dispatch({\r\n                type: REGISTER_USER_SUCCESS\r\n            });\r\n        }\r\n        catch(err){\r\n            dispatch({\r\n                type: REGISTER_USER_FAILED\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const loginUser: AppThunk = (userData) => {\r\n    return async (dispatch: AppDispatch) => {\r\n        try{\r\n            dispatch({\r\n                type: LOGIN_USER_REQUEST\r\n            });\r\n\r\n            const res = await fetch(`${BASE_URL}/auth/login`, {\r\n                method: 'POST',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify(userData)\r\n            })\r\n\r\n            const data = await checkResponse(res);\r\n\r\n            localStorage.setItem('refreshToken', data.refreshToken);\r\n            setCookie('accessToken', data.accessToken);\r\n            dispatch({\r\n                type: LOGIN_USER_SUCCESS,\r\n                user: data.user\r\n            })\r\n\r\n        }\r\n        catch(err){\r\n            dispatch({\r\n                type: LOGIN_USER_FAILED\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const updateToken: AppThunk = () => {\r\n    return async (dispatch: AppDispatch) => {\r\n        try{\r\n            dispatch({\r\n                type: REFRESH_TOKEN_REQUEST\r\n            });\r\n\r\n            const data = await fetchWithRefresh(`${BASE_URL}/auth/token`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ \r\n                    token: localStorage['refreshToken'] \r\n                })\r\n            });\r\n\r\n            localStorage.setItem('refreshToken', data.refreshToken);\r\n            setCookie('accessToken', data.accessToken);\r\n            dispatch({\r\n                type: REFRESH_TOKEN_SUCCESS\r\n            })\r\n\r\n        }\r\n        catch(err){\r\n            dispatch({\r\n                type: REFRESH_TOKEN_FAILED\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const logoutUser: AppThunk = () => {\r\n    return async (dispatch: AppDispatch) => {\r\n        const tokenBody = { token: localStorage['refreshToken'] };\r\n \r\n        try{\r\n            dispatch({\r\n                type: LOGOUT_USER_REQUEST\r\n            });\r\n\r\n            const res = await fetch(`${BASE_URL}/auth/logout`, {\r\n                method: 'POST',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify(tokenBody)\r\n            })\r\n\r\n            const data = await checkResponse(res);\r\n\r\n            deleteCookie('accessToken');\r\n            localStorage.removeItem('refreshToken');\r\n            dispatch({\r\n                type: LOGOUT_USER_SUCCESS,\r\n                message: data.message\r\n            });\r\n        }\r\n        catch(err){\r\n            dispatch({\r\n                type: LOGOUT_USER_FAILED\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const getUserData: AppThunk = (methodType, userData) => {\r\n    return async (dispatch: AppDispatch) => {        \r\n        const accessToken: string = \r\n            document.cookie.match(/(accessToken=)(.+)/)![2];\r\n\r\n        try{\r\n            dispatch({\r\n                type: UPDATE_USER_DATA_REQUEST\r\n            });\r\n\r\n            const data = await fetchWithRefresh(`${BASE_URL}/auth/user`, {\r\n                method: methodType,\r\n                headers: { \r\n                    'authorization': accessToken,\r\n                    'Content-Type': 'application/json' \r\n                },\r\n                body: JSON.stringify(userData)\r\n            });\r\n\r\n            if(!data.success) throw new Error('');\r\n\r\n            dispatch({\r\n                type: UPDATE_USER_DATA_SUCCESS,\r\n                user: data.user\r\n            });\r\n        }\r\n        catch(err){            \r\n            dispatch({\r\n                type: UPDATE_USER_DATA_FAILED\r\n            })\r\n        }\r\n    }\r\n}","import React, { FunctionComponent } from \"react\";\r\nimport { useDispatch } from \"../../services/types/hooks\";\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { updateToken } from '../../services/thunks/access';\r\n\r\ntype TProtectedRouteProps = {\r\n    path: string;\r\n    exact?: boolean;\r\n};\r\n\r\nconst ProtectedRoute: FunctionComponent<TProtectedRouteProps> = ({ children, ...rest }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const isAccessTokenExist: boolean = \r\n        document.cookie.indexOf('accessToken=') !== -1;\r\n    const isRefreshTokenExist: boolean = \r\n        localStorage['refreshToken'] !== undefined;\r\n\r\n    if(!isAccessTokenExist && isRefreshTokenExist)\r\n        dispatch(updateToken());\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={({location}) => isAccessTokenExist ? (\r\n                children \r\n                ) : (\r\n                <Redirect to={{\r\n                    pathname: '/login',\r\n                    state: { from: location }\r\n                }} />\r\n                )\r\n            }\r\n        />\r\n    );\r\n}\r\n\r\nexport default ProtectedRoute;","export const GET_INGREDIENTS_REQUEST: 'GET_INGREDIENTS_REQUEST' = 'GET_INGREDIENTS_REQUEST';\r\nexport const GET_INGREDIENTS_SUCCESS: 'GET_INGREDIENTS_SUCCESS' = 'GET_INGREDIENTS_SUCCESS';\r\nexport const GET_INGREDIENTS_FAILED: 'GET_INGREDIENTS_FAILED' = 'GET_INGREDIENTS_FAILED';\r\nexport const SET_CURRENT_INGREDIENT: 'SET_CURRENT_INGREDIENT' = 'SET_CURRENT_INGREDIENT';\r\nexport const ADD_INGREDIENT: 'ADD_INGREDIENT' = 'ADD_INGREDIENT';\r\nexport const ADD_BUN: 'ADD_BUN' = 'ADD_BUN';\r\nexport const DELETE_INGREDIENT: 'DELETE_INGREDIENT' = 'DELETE_INGREDIENT';\r\nexport const RESET_CURRENT_INGREDIENT: 'RESET_CURRENT_INGREDIENT' = 'RESET_CURRENT_INGREDIENT';\r\nexport const MOVE_INGREDIENT: 'MOVE_INGREDIENT' = 'MOVE_INGREDIENT';\r\nexport const CLEAR_CONSTRUCTOR_INGREDIENTS: 'CLEAR_CONSTRUCTOR_INGREDIENTS' = 'CLEAR_CONSTRUCTOR_INGREDIENTS';\r\nexport const SET_INGREDIENTS_TAB: 'SET_INGREDIENTS_TAB' = 'SET_INGREDIENTS_TAB';","import React, { useRef, FunctionComponent, SyntheticEvent } from \"react\";\r\nimport { useDispatch } from \"../../services/types/hooks\";\r\nimport { useDrag, useDrop } from 'react-dnd';\r\nimport { ConstructorElement, DragIcon } from \r\n    '@ya.praktikum/react-developer-burger-ui-components';\r\nimport {\r\n    DELETE_INGREDIENT\r\n} from '../../services/action-constants/ingredients';\r\n\r\nimport styles from './constructor-item.module.css';\r\n\r\ntype TConstructorItemProps = {\r\n    id?: string;\r\n    index: number;\r\n    isBun: boolean;\r\n    isLocked: boolean;\r\n    moveCard?: (dragIndex: number, hoverIndex: number) => void;\r\n    price: number;\r\n    text: string;\r\n    thumbnail: string;\r\n    start?: boolean;\r\n    type?: 'top' | 'bottom';\r\n};\r\n\r\ntype TItemDropHover = {\r\n    id: string;\r\n    index: number\r\n};\r\n\r\nconst ConstructorItem: FunctionComponent<TConstructorItemProps> = (props) => {\r\n    const { id, isBun, index, moveCard, start } = props;\r\n    const ref = useRef<HTMLLIElement>(null);\r\n    const dispatch = useDispatch();\r\n\r\n    \r\n    const onDelete: (id: string | undefined) => void = (id) => {\r\n        dispatch({\r\n            type: DELETE_INGREDIENT,\r\n            id\r\n        })\r\n    }\r\n\r\n    const [{ handlerId }, drop] = useDrop({\r\n        accept: 'ingredient',\r\n        collect: (monitor) => ({\r\n            handlerId: monitor.getHandlerId()\r\n        }),\r\n        hover: (item: TItemDropHover, monitor) => {\r\n            if(!ref.current) return;\r\n\r\n            const dragIndex: number = item.index;\r\n            const hoverIndex: number = index;\r\n            if(dragIndex === hoverIndex) return;\r\n\r\n            const hoverBoundingRect = ref.current?.getBoundingClientRect();\r\n            const hoverMiddleY: number = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\r\n            const clientOffset = monitor.getClientOffset();\r\n            const hoverClientY: number = clientOffset!.y - hoverBoundingRect.top;\r\n\r\n            if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\r\n                return;\r\n            }\r\n            if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\r\n                return;\r\n            }\r\n            if(moveCard)\r\n                setTimeout(() => moveCard(dragIndex, hoverIndex));\r\n            item.index = hoverIndex;\r\n        }\r\n    })\r\n\r\n    const [{ isDragging }, drag] = useDrag({\r\n        type: 'ingredient',\r\n        item: () => {\r\n            return { id, index };\r\n        },\r\n        collect: (monitor) => ({\r\n            isDragging: monitor.isDragging(),\r\n        }),\r\n    });\r\n\r\n    const opacity: number = isDragging ? 0 : 1;\r\n    drag(drop(ref));\r\n    return(  \r\n        isBun ? ( \r\n            <li className={`${styles.constructorItem} ${styles.bun}`}>\r\n                { !start && <ConstructorElement {...props} /> }\r\n            </li>\r\n         ) : (      \r\n            <li \r\n              className={`${styles.constructorItem} ${opacity}`} \r\n              data-id={id}\r\n              data-handler-id={handlerId}\r\n              ref={ref}>\r\n                <div className={styles.settings}>\r\n                    <DragIcon type={\"primary\"} />\r\n                </div>\r\n                <ConstructorElement {...props} handleClose={() => onDelete(id)} />\r\n            </li> \r\n        )                          \r\n    )\r\n}\r\n\r\nexport default ConstructorItem;","export const SEND_ORDER_REQUEST: 'SEND_ORDER_REQUEST' = 'SEND_ORDER_REQUEST';\r\nexport const SEND_ORDER_SUCCESS: 'SEND_ORDER_SUCCESS' = 'SEND_ORDER_SUCCESS';\r\nexport const SEND_ORDER_FAILED: 'SEND_ORDER_FAILED' = 'SEND_ORDER_FAILED';\r\nexport const RESET_ORDER_REQUEST: 'RESET_ORDER_REQUEST' = 'RESET_ORDER_REQUEST';","export const SET_MODAL_DATA: 'SET_MODAL_DATA' = 'SET_MODAL_DATA';\r\nexport const SET_MODAL_ERROR: 'SET_MODAL_ERROR' = 'SET_MODAL_ERROR';\r\nexport const CLOSE_MODAL: 'CLOSE_MODAL' = 'CLOSE_MODAL';","import React, { useCallback, FunctionComponent, ReactElement } from \"react\";\r\nimport { useSelector, useDispatch } from \"../../services/types/hooks\";\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\nimport { useDrop } from 'react-dnd';\r\nimport ConstructorItem from '../constructor-item/constructor-item';\r\nimport { CurrencyIcon, Button } from \r\n    '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { ORDER_URL } from \r\n    '../../utils/constants';\r\nimport {\r\n    ADD_INGREDIENT,\r\n    ADD_BUN,\r\n    MOVE_INGREDIENT,\r\n    CLEAR_CONSTRUCTOR_INGREDIENTS\r\n} from '../../services/action-constants/ingredients';\r\nimport { sendOrder } from '../../services/thunks/order';\r\nimport { TProductItem } from '../../utils/types';\r\nimport styles from './burger-constructor.module.css';\r\n\r\ntype TOnDrop = {\r\n    itemId: string;\r\n};\r\ntype TAccessToken = Array<string> | null;\r\n\r\ntype TBun = TProductItem | boolean | undefined;\r\n\r\nconst BurgerConstructor: FunctionComponent = () => {\r\n    const dispatch = useDispatch();\r\n    const { constructorIngredients }: { constructorIngredients: TProductItem[] } = \r\n        useSelector(store => store.ingredients);\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n\r\n    const onDropBun: (item: TOnDrop) => void = (item) => {\r\n        dispatch({\r\n            type: ADD_BUN,\r\n            id: item.itemId\r\n        });\r\n    }\r\n    const onDropIngredient: (item: TOnDrop) => void = (item) => {\r\n        item.itemId && dispatch({\r\n            type: ADD_INGREDIENT,\r\n            id: item.itemId\r\n        });\r\n    }\r\n\r\n    const isHoverNeeded: () => boolean = () => \r\n        !constructorIngredients.length ||\r\n        (constructorIngredients.length === 1 && constructorIngredients[0].type !== 'bun' );\r\n\r\n    const [{isBunHover}, dropTargetTopBun] = useDrop({\r\n        accept: 'bun',\r\n        drop(itemId: TOnDrop){\r\n            onDropBun(itemId);\r\n        },\r\n        collect: monitor => {\r\n            return {\r\n                isBunHover: isHoverNeeded() && monitor.isOver(),\r\n            }\r\n        }\r\n    });\r\n    const [, dropTargetBottomBun] = useDrop({\r\n        accept: 'bun',\r\n        drop(itemId: TOnDrop){\r\n            onDropBun(itemId);\r\n        }\r\n    });\r\n\r\n    const [{isIngredientHover}, dropIngredientsTarget] = useDrop({\r\n        accept: ['sauce', 'main', 'ingredient'],\r\n        drop(itemId: TOnDrop){\r\n            return onDropIngredient(itemId);\r\n        },\r\n        collect: monitor => {\r\n            return {\r\n                isIngredientHover: isHoverNeeded() && monitor.isOver(),\r\n            }\r\n        }\r\n    });\r\n\r\n    const totalPrice = constructorIngredients.reduce(\r\n        (accum: number, product: TProductItem): number => {\r\n        return product.type === 'bun' ? \r\n            accum + product.price * 2 :\r\n            accum + product.price\r\n    }, 0)\r\n\r\n    const onTotalClick: () => void = () => {\r\n        const isBunExist: boolean = constructorIngredients.findIndex((item: TProductItem) => \r\n            item.type === 'bun') !== -1;\r\n\r\n        if(!isBunExist) return;\r\n        const accessToken: TAccessToken = document.cookie.match(/(accessToken=)(.+)/);\r\n        \r\n        if(!accessToken){\r\n            history.replace({\r\n                pathname: '/login',\r\n                state: { background: location}\r\n            });\r\n            history.push('/login');\r\n        }            \r\n        else{\r\n            dispatch(sendOrder(ORDER_URL, constructorIngredients));\r\n            dispatch({ type: CLEAR_CONSTRUCTOR_INGREDIENTS });\r\n            history.replace({\r\n                pathname: '/order',\r\n                state: { background: location}\r\n            });\r\n        }        \r\n    }\r\n\r\n    const getBun: (items: Array<TProductItem>, position: 'top' | 'bottom', descr: string) => ReactElement = \r\n        (items, position, descr) => {\r\n        const bun: TBun = items.length !== 0 && items.find((product: TProductItem) => \r\n            product.type === 'bun');\r\n\r\n        return !bun ? (\r\n            <ConstructorItem \r\n                isBun={true} \r\n                start={true}\r\n                index={0}\r\n                isLocked={true}\r\n                price={0}\r\n                thumbnail={''}\r\n                text={''} />\r\n        ) : (\r\n            <ConstructorItem \r\n                text={`${bun.name} ${descr}`}\r\n                type={position}\r\n                isLocked={true}\r\n                price={bun.price}\r\n                thumbnail={bun.image}\r\n                start={false}\r\n                isBun={true}\r\n                index={0} />\r\n        )\r\n    }\r\n\r\n    const moveCard = useCallback((dragIndex: number, hoverIndex: number): void => {\r\n        dispatch({\r\n            type: MOVE_INGREDIENT,\r\n            drag: dragIndex,\r\n            hover: hoverIndex\r\n        });\r\n    }, [constructorIngredients]);\r\n\r\n    const ingredientHover: string = isBunHover || isIngredientHover ? styles.listHover : '';\r\n\r\n    return(\r\n        <section className={`${styles.burgerConstructor} pt-25 pl-4`}>\r\n            <ul \r\n              className={`${styles.bun} ${styles.bunTop} ${ingredientHover} mt-0 pr-4`}\r\n              ref={dropTargetTopBun}>\r\n                {getBun(constructorIngredients, 'top', '(верх)')}\r\n            </ul>   \r\n            <ul \r\n              className={`${styles.list} ${ingredientHover} pr-2`} \r\n              ref={dropIngredientsTarget}>\r\n                {\r\n                    constructorIngredients.map((slice: any, i: number) => {\r\n                        let { _id, name, price, image, type } = slice; \r\n                        if(type === 'bun') return;\r\n                        return [\r\n                            <ConstructorItem \r\n                                key={_id}\r\n                                id={_id}\r\n                                isBun={false}\r\n                                isLocked={false}\r\n                                text={name}\r\n                                price={price}\r\n                                thumbnail={image}\r\n                                index={i}\r\n                                moveCard={moveCard}/>\r\n                        ];\r\n                    })\r\n                }\r\n            </ul>\r\n            <ul \r\n              className={`${styles.bun} ${styles.bunBottom} ${ingredientHover} pr-4`}\r\n              ref={dropTargetBottomBun}>\r\n                {getBun(constructorIngredients, 'bottom', '(низ)')}\r\n            </ul>\r\n            <div className={`${styles.total} text text_type_digits-medium pt-10 pr-4`}>\r\n                <div className={styles.totalPriceBlock}>\r\n                    <span className={styles.totalPrice}>\r\n                        {totalPrice}\r\n                    </span>\r\n                    <CurrencyIcon type=\"primary\" />\r\n                </div>\r\n                <Button type=\"primary\" size=\"large\" onClick={onTotalClick}>\r\n                    Оформить заказ\r\n                </Button>               \r\n            </div>\r\n        </section>\r\n    )\r\n} \r\n\r\nexport default BurgerConstructor;","import { Dispatch } from 'redux';\r\nimport {\r\n    SEND_ORDER_REQUEST,\r\n    SEND_ORDER_SUCCESS,\r\n    SEND_ORDER_FAILED,\r\n} from '../action-constants/order';\r\nimport { SET_MODAL_DATA } from '../action-constants/modal';\r\n\r\nimport { BASE_URL } from '../../utils/constants';\r\nimport { checkResponse } from '../../utils/utils';\r\nimport { TProductItem } from '../../utils/types';\r\nimport { AppThunk, AppDispatch } from '../types';\r\n\r\nexport const sendOrder: AppThunk = (orderURL, constructorIngredients) => {\r\n    return async (dispatch: AppDispatch) => {\r\n        const orderBody = {\r\n            ingredients: constructorIngredients.map((product: TProductItem) => product._id)\r\n        };\r\n        try{\r\n            dispatch({\r\n                type: SEND_ORDER_REQUEST\r\n            })\r\n            const accessToken: string = \r\n            document.cookie.match(/(accessToken=)(.+)/)![2];\r\n\r\n            const res = await fetch(`${BASE_URL}${orderURL}`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': accessToken \r\n                },\r\n                body: JSON.stringify(orderBody)\r\n            });\r\n\r\n            const data = await checkResponse(res);\r\n\r\n            dispatch({ \r\n                type: SEND_ORDER_SUCCESS,\r\n                data\r\n            });\r\n            dispatch({ \r\n                type: SET_MODAL_DATA,\r\n                mode: 'order',\r\n                title: '',\r\n                data\r\n            });\r\n        }\r\n        catch(err){\r\n            dispatch({\r\n                type: SEND_ORDER_FAILED\r\n            });\r\n        }\r\n    }\r\n}","import React, { FunctionComponent } from \"react\";\r\nimport { useSelector } from \"../../services/types/hooks\";\r\nimport { Tab } from \r\n    '@ya.praktikum/react-developer-burger-ui-components';\r\nimport styles from './ingredients-nav.module.css';\r\nimport { TTabs } from '../../utils/types';\r\n\r\ntype TIngredientsNavProps = {\r\n    onTabClick: (value: string) => void;\r\n};\r\n\r\nconst IngredientsNav: FunctionComponent<TIngredientsNavProps> = ({ onTabClick }) => {\r\n    const { tabs }: { tabs: TTabs[] } = useSelector(store => store.ingredients);\r\n\r\n    const current = tabs.reduce((current: TTabs, tab: TTabs) => {\r\n            return current.ratio < tab.ratio ? \r\n                tab : current;\r\n        }, tabs[0]).id;\r\n\r\n    return(\r\n        <nav>\r\n            <ul className={`${styles.list} mb-10`}>\r\n                { tabs.map((tab: TTabs, i: number) => {\r\n                    const { title, id } = tab;\r\n                    return <li key={i}>\r\n                        <Tab \r\n                            value={id} \r\n                            active={id === current}\r\n                            onClick={() => onTabClick(id)}>\r\n                            {title}\r\n                        </Tab>\r\n                    </li>})\r\n                }\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default IngredientsNav;","import React, { FunctionComponent} from \"react\";\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { useDrag } from 'react-dnd';\r\nimport { Counter, CurrencyIcon } from \r\n    '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\nimport styles from './item-cart.module.css';\r\n\r\ntype TItemCartProps = {\r\n    id: string;\r\n    name: string;\r\n    price: number;\r\n    image: string;\r\n    type: string;\r\n    amount: number;\r\n};\r\n\r\nconst ItemCart: FunctionComponent<TItemCartProps> = \r\n    ({ id: itemId, name: itemName, price: itemPrice, image: itemImage, type, amount }) => {\r\n    const location = useLocation();\r\n\r\n    const [ , dragRef ] = useDrag({\r\n        type,\r\n        item: { itemId },\r\n        collect: monitor => ({\r\n            isDrag: monitor.isDragging()\r\n        })\r\n    });\r\n\r\n    return(\r\n        <Link\r\n            to={{\r\n                pathname: `/ingredients/${itemId}`,\r\n                state: { background: location }\r\n            }}\r\n            key={itemId}\r\n            className={styles.link}>\r\n            <li \r\n            className={styles.itemCart} \r\n            data-id={itemId}>\r\n                <div \r\n                className={styles.itemCartContainer}\r\n                ref={dragRef}>\r\n                    <img src={itemImage} \r\n                        className={styles.image} \r\n                        alt={itemName} />\r\n                    \r\n                    <span className={`${styles.price} text text_type_digits-default mt-2 mb-2`}>\r\n                        { itemPrice }\r\n                        <CurrencyIcon type=\"primary\" />\r\n                    </span>\r\n                    <span className={`${styles.name} text text_type_main-default`}>\r\n                        { itemName }\r\n                    </span>\r\n                </div>\r\n                { amount !== 0 && <Counter count={amount} size=\"default\" /> }\r\n            </li>\r\n        </Link>        \r\n    )\r\n}\r\n\r\nexport default ItemCart;","import React, { useEffect, RefObject, SyntheticEvent } from \"react\";\r\nimport { useSelector, useDispatch } from \"../../services/types/hooks\";\r\nimport { useInView } from 'react-intersection-observer';\r\n\r\nimport ItemCart from '../item-cart/item-cart';\r\nimport { SET_MODAL_DATA } from '../../services/action-constants/modal';\r\nimport {\r\n    SET_CURRENT_INGREDIENT,\r\n    SET_INGREDIENTS_TAB\r\n  } from '../../services/action-constants/ingredients';\r\nimport { TProductItem } from '../../utils/types';\r\nimport { TTypeToTitle } from '../burger-ingredients/burger-ingredients';\r\n\r\nimport styles from './ingredients-section.module.css';\r\n\r\ntype TIngredientsSectionProps = {\r\n    title: keyof TTypeToTitle;\r\n    items: Array<TProductItem>;\r\n    ref: RefObject<HTMLElement>\r\n}\r\n\r\nconst IngredientsSection = React.forwardRef<HTMLHeadingElement, TIngredientsSectionProps>(\r\n    ({ title, items }, ref) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const { \r\n        ingredientsData,\r\n        constructorIngredients\r\n      }: {\r\n          ingredientsData: TProductItem[],\r\n          constructorIngredients: TProductItem[]\r\n      } = useSelector(store => store.ingredients);\r\n\r\n    const { ref: refDnd, inView, entry } = useInView({\r\n        threshold: [0, 0.25, 0.5, 0.75, 1] });\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: SET_INGREDIENTS_TAB,\r\n            id: title,\r\n            ratio: entry ? entry.intersectionRatio : 0\r\n          });\r\n    }, [inView, entry, dispatch]);\r\n\r\n    const typeToTitle: TTypeToTitle = {\r\n        bun: 'Булки',        \r\n        sauce: 'Соусы',\r\n        main: 'Начинки'\r\n    }\r\n\r\n    const onItemClick = (e: SyntheticEvent) => {\r\n        const li = (e.target as HTMLElement).closest('li'),\r\n              id = li ? li.dataset.id : null;\r\n        dispatch({\r\n            type: SET_CURRENT_INGREDIENT,\r\n            data: ingredientsData.find((item: TProductItem) => item._id === id)\r\n        })\r\n        dispatch({ \r\n            type: SET_MODAL_DATA,\r\n            mode: 'ingredient',\r\n            title: 'Детали ингредиента'\r\n        });\r\n    }\r\n\r\n    return (\r\n        <section\r\n            onClick={onItemClick}\r\n            id={title}\r\n            ref={refDnd}>\r\n            <h2 \r\n                className={`text text_type_main-medium mb-6`}\r\n                id={title}\r\n                ref={ref}>\r\n                { typeToTitle[title] }\r\n            </h2>\r\n            <ul className={`${styles.ingredientsList} mt-6 mb-0 pl-4 pr-2`}>\r\n                { items.map((item: TProductItem) => {\r\n                    let amount: number = 0;\r\n                    constructorIngredients.forEach((element: TProductItem) => {\r\n                        if(element._id === item._id)\r\n                            amount = element.type === 'bun' ? 2 : amount + 1;\r\n                    });\r\n\r\n                    return (\r\n                        <ItemCart \r\n                            id={item._id}\r\n                            name={item.name}\r\n                            price={item.price}\r\n                            image={item.image}\r\n                            type={item.type}\r\n                            amount={amount}\r\n                            key={item._id} /> \r\n                    )}) \r\n                }\r\n            </ul>\r\n        </section>\r\n    )\r\n})\r\n\r\nexport default IngredientsSection;","import React, { useRef, FunctionComponent, RefObject } from \"react\";\r\nimport { useSelector } from \"../../services/types/hooks\";\r\nimport IngredientsNav from \"../ingredients-nav/ingredients-nav\";\r\nimport IngredientsSection from '../ingredients-section/ingredients-section';\r\nimport { TProductItem } from '../../utils/types';\r\n\r\nimport styles from './burger-ingredients.module.css';\r\n\r\ntype TTitleToRef = {\r\n    [name: string]: RefObject<HTMLHeadingElement>;\r\n};\r\n\r\nexport type TTypeToTitle = {\r\n    bun: 'Булки';    \r\n    sauce: 'Соусы';\r\n    main: 'Начинки';\r\n};\r\n\r\ntype TIngredientsBlockItem = {\r\n    title: keyof TTypeToTitle;\r\n    items: Array<TProductItem>;\r\n};\r\n\r\nconst BurgerIngredients: FunctionComponent = () => {\r\n    \r\n    const { ingredientsData }: { ingredientsData: TProductItem[] } = \r\n        useSelector(store => store.ingredients);\r\n        \r\n    const bunRef = useRef<HTMLHeadingElement>(null);\r\n    const sauceRef = useRef<HTMLHeadingElement>(null);\r\n    const mainRef = useRef<HTMLHeadingElement>(null);\r\n        \r\n    const typeToTitle: TTypeToTitle = {\r\n        bun: 'Булки',        \r\n        sauce: 'Соусы',\r\n        main: 'Начинки'\r\n    }\r\n\r\n    const titleToRef: TTitleToRef = {\r\n        bun: bunRef,\r\n        sauce: sauceRef,\r\n        main: mainRef\r\n    }\r\n\r\n    const onTabClick = (value: string) => {\r\n        const element = titleToRef[value].current;\r\n        element?.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n\r\n    const createIngredientsBlocks = () => {        \r\n        const blocks: Array<TIngredientsBlockItem> = [];\r\n        (Object.keys(typeToTitle) as (keyof TTypeToTitle)[]).forEach(key => {\r\n            const item: TIngredientsBlockItem = { \r\n                title: key,\r\n                items: [] \r\n            };            \r\n            ingredientsData.forEach((elem: TProductItem) => {\r\n                if(elem.type === key)\r\n                    item.items.push(elem);            \r\n            });\r\n            blocks.push(item);\r\n        });\r\n        return blocks;\r\n    }\r\n       \r\n    const blocks = createIngredientsBlocks();    \r\n \r\n    return (\r\n        <section className={`${styles.burgerIngredients}`}>\r\n            <h1 className={`mt-10 mb-5 text text_type_main-large`}>\r\n                Соберите бургер\r\n            </h1>\r\n            <IngredientsNav onTabClick={onTabClick} />\r\n                <section className={styles.ingredients}>\r\n                { blocks.map((block: TIngredientsBlockItem, i: number) => \r\n                    <IngredientsSection \r\n                        key={block.items[0]._id + i}   \r\n                        ref={titleToRef[block.title]}                     \r\n                        {...block}\r\n                    />\r\n                ) }\r\n                </section>            \r\n        </section>\r\n    )\r\n}   \r\n\r\nexport default BurgerIngredients;","import React, { FunctionComponent } from 'react';\r\n\r\nimport styles from './error-indicator.module.css';\r\n\r\nconst ErrorIndicator: FunctionComponent = () => {\r\n    return (\r\n        <div className={styles.errorIndicator}>\r\n            <span>Ошибка</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorIndicator;","import React, { FunctionComponent } from \"react\";\r\n\r\nimport styles from './spinner.module.css';\r\n\r\nconst Spinner: FunctionComponent = () => {\r\n    return (\r\n        <div className={styles.spinner}>\r\n            <div className={styles['lds-roller']}>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n        </div>        \r\n    )\r\n}\r\n\r\nexport default Spinner;","import React, { FunctionComponent } from 'react';\r\nimport { useSelector } from '../services/types/hooks';\r\nimport { DndProvider } from 'react-dnd';\r\nimport { HTML5Backend } from 'react-dnd-html5-backend';\r\nimport BurgerConstructor from \"../components/burger-constructor/burger-constructor\";\r\nimport BurgerIngredients from \"../components/burger-ingredients/burger-ingredients\";\r\nimport ErrorIndicator from '../components/error-indicator/error-indicator';\r\nimport Spinner from '../components/spinner/spinner';\r\n\r\nimport styles from './home.module.css';\r\n\r\nconst HomePage: FunctionComponent = () => {\r\n  const {\r\n    ingredientsRequest, \r\n    ingredientsFailed\r\n  } = useSelector((store: any) => store.ingredients);\r\n\r\n  return (\r\n    <main className={`${styles.main}`}>\r\n        { ingredientsFailed ? <ErrorIndicator /> :\r\n        ingredientsRequest ? <Spinner /> : \r\n        <>\r\n            <DndProvider backend={HTML5Backend}>\r\n            <BurgerIngredients />\r\n            <BurgerConstructor />\r\n            </DndProvider>\r\n        </>\r\n        }\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default HomePage;","import { \r\n    SET_EMAIL,\r\n    SET_NAME, \r\n    SET_PASSWORD, \r\n    SET_LOGIN,\r\n    SET_RESTORE_CODE\r\n} from '../services/action-constants/access';\r\nimport { TDict } from '../utils/types';\r\n\r\ntype TDispatchData = {\r\n    type: string;\r\n    payload: string;\r\n};\r\n\r\nconst dictNameToType: TDict<string> = {\r\n    name: SET_NAME, \r\n    email: SET_EMAIL, \r\n    password: SET_PASSWORD,\r\n    login: SET_LOGIN,\r\n    code: SET_RESTORE_CODE\r\n};\r\n\r\nexport const dispatchData: (key: string, value: string) => TDispatchData = \r\n    (key, value) => {\r\n    return {\r\n        type: dictNameToType[key],\r\n        payload: value\r\n    };\r\n};","import React, { FunctionComponent, SyntheticEvent } from 'react';\r\nimport { useSelector, useDispatch } from '../services/types/hooks';\r\nimport { Link, Redirect, useHistory } from 'react-router-dom';\r\nimport { loginUser } from '../services/thunks/access';\r\nimport Spinner from '../components/spinner/spinner';\r\nimport { Input, Button } from \r\n    '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { dispatchData } from '../services/action-creators';\r\n\r\nimport styles from './page.module.css';\r\n\r\ntype TLocation = {\r\n    hash?: string;\r\n    key?: string;\r\n    pathname?: string;\r\n    search?: string;\r\n    state?: TState;\r\n}\r\n\r\ntype TState = {\r\n    from?: TLocation;\r\n}\r\n\r\nconst LoginPage: FunctionComponent = () => {    \r\n    const dispatch = useDispatch();\r\n    const { \r\n        user:{email, password}, \r\n        loginRequest, \r\n        logoutRequest \r\n    } = useSelector((store: any) => store.access);\r\n\r\n    const isAccessTokenExist: boolean = \r\n        document.cookie.indexOf('accessToken=') !== -1;\r\n \r\n    const login: () => void = () => {\r\n        const userData = { email, password };\r\n        dispatch(loginUser(userData));\r\n    }\r\n    const history = useHistory();\r\n    const { state }: any  = history.location;\r\n    const setValue = (e: SyntheticEvent) => {\r\n        dispatch(dispatchData(\r\n            (e.target as HTMLInputElement).name,\r\n            (e.target as HTMLInputElement).value\r\n        ));\r\n    }\r\n\r\n    return (\r\n        loginRequest || logoutRequest ? (\r\n        <Spinner /> \r\n        ) : ( isAccessTokenExist ) ? (\r\n        <Redirect to={state?.from  || '/'} />\r\n        ) : (\r\n        <form className={styles.main} onSubmit={login}>\r\n            <section className={`${styles.container} text`}>\r\n                <h1 className={`${styles.title} text_type_main-medium`}>Вход</h1>\r\n                <div className={styles.inputLarge}>\r\n                    <Input\r\n                        type={'email'}\r\n                        placeholder={'E-mail'}\r\n                        name={'email'}            \r\n                        size={'default'}\r\n                        value={email}\r\n                        onChange={setValue}\r\n                        />\r\n                </div>\r\n                <div className={styles.inputLarge}>\r\n                    <Input\r\n                        type={'password'}\r\n                        placeholder={'Пароль'}\r\n                        name={'password'}    \r\n                        icon={'ShowIcon'}        \r\n                        size={'default'}\r\n                        value={password}\r\n                        onChange={setValue}\r\n                        />\r\n                </div>\r\n                <div className='mt-6 mb-20'>\r\n                    <Button type=\"primary\" size=\"medium\">\r\n                        Войти\r\n                    </Button>\r\n                </div>\r\n                <section className={styles.questions}>\r\n                    <p className={`${styles.question} text_type_main-default mb-4`}>\r\n                        <span>Вы — новый пользователь? </span> \r\n                        <Link \r\n                            to='/register'\r\n                            className={styles.link}>\r\n                            Зарегистрироваться\r\n                        </Link>\r\n                    </p>\r\n                    <p className={`${styles.question} text_type_main-default`}>\r\n                        <span>Забыли пароль? </span>\r\n                        <Link \r\n                            to='/forgot-password' \r\n                            className={styles.link}>\r\n                            Восстановить пароль\r\n                        </Link>\r\n                    </p>   \r\n                </section>\r\n            </section>        \r\n        </form>\r\n        )\r\n    );\r\n}\r\n\r\nexport default LoginPage;","import React, { FunctionComponent, SyntheticEvent } from 'react';\r\nimport { useSelector, useDispatch } from '../services/types/hooks';\r\nimport { Link, Redirect, useHistory } from 'react-router-dom';\r\nimport { registerNewUser } from '../services/thunks/access';\r\nimport { Input, Button } from \r\n    '@ya.praktikum/react-developer-burger-ui-components';\r\nimport Spinner from '../components/spinner/spinner';\r\nimport { dispatchData } from '../services/action-creators';\r\n\r\nimport styles from './page.module.css';\r\n\r\nconst RegisterPage: FunctionComponent = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { user: {name, email, password}, registerRequest } = \r\n        useSelector((store: any) => store.access);\r\n    const history = useHistory();\r\n    const { state }: any = history.location;\r\n\r\n    const isAccessTokenExist = \r\n        document.cookie.indexOf('accessToken=') !== -1;\r\n\r\n    const registerUser = () => {\r\n        const userData = { name, email, password };\r\n        dispatch(registerNewUser(userData));\r\n    }\r\n\r\n    const setValue = (e: SyntheticEvent) => {\r\n        dispatch(dispatchData(\r\n            (e.target as HTMLInputElement).name,\r\n            (e.target as HTMLInputElement).value\r\n        ));\r\n    }\r\n\r\n    return (\r\n        registerRequest ? (\r\n        <Spinner />\r\n        ) : ( isAccessTokenExist ) ? (\r\n        <Redirect to={state?.from || '/'} />\r\n        ) : (\r\n        <form className={styles.main} onSubmit={registerUser}>\r\n            <section className={`${styles.container} text`}>\r\n                <h1 className={`${styles.title} text_type_main-medium`}>Регистрация</h1>\r\n                <div className={styles.inputLarge}>\r\n                    <Input\r\n                        type={'text'}\r\n                        placeholder={'Имя'}\r\n                        name={'name'}            \r\n                        size={'default'}\r\n                        value={name}\r\n                        onChange={(e) => setValue(e)}\r\n                        />\r\n                </div>\r\n                <div className={styles.inputLarge}>\r\n                    <Input\r\n                        type={'email'}\r\n                        placeholder={'E-mail'}\r\n                        name={'email'}            \r\n                        size={'default'}\r\n                        value={email}\r\n                        onChange={(e) => setValue(e)}\r\n                        />\r\n                </div>\r\n                <div className={styles.inputLarge}>\r\n                    <Input\r\n                        type={'password'}\r\n                        placeholder={'Пароль'}\r\n                        name={'password'}    \r\n                        icon={'ShowIcon'}        \r\n                        size={'default'}\r\n                        value={password}\r\n                        onChange={(e) => setValue(e)}\r\n                        />\r\n                </div>\r\n                <div className='mt-6 mb-20'>\r\n                    <Button type=\"primary\" size=\"medium\">\r\n                        Зарегистрироваться\r\n                    </Button>\r\n                </div>\r\n                <section className={styles.questions}>\r\n                    <p className={`${styles.question} text_type_main-default`}>\r\n                        <span>Уже зарегистрированы? </span>\r\n                        <Link \r\n                            to='/login'\r\n                            className={styles.link}>\r\n                            Войти\r\n                        </Link>\r\n                    </p>   \r\n                </section>\r\n            </section>        \r\n        </form>\r\n        )\r\n    );\r\n}\r\n\r\nexport default RegisterPage;","import React, { FunctionComponent, SyntheticEvent } from 'react';\r\nimport { useSelector, useDispatch } from '../services/types/hooks';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { restorePassword } from '../services/thunks/access';\r\nimport { SET_RESTORE_EMAIL } from '../services/action-constants/access';\r\nimport { Input, Button } from \r\n    '@ya.praktikum/react-developer-burger-ui-components';\r\nimport Spinner from '../components/spinner/spinner';\r\n\r\nimport styles from './page.module.css';\r\n\r\nconst ForgotPasswordPage: FunctionComponent = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { \r\n        changePasswordRequest, \r\n        changePasswordEmail, \r\n        changePasswordMessage \r\n    } = useSelector((store: any) => store.access);\r\n\r\n    const isAccessTokenExist = \r\n        document.cookie.indexOf('accessToken=') !== -1;\r\n\r\n    const reinstallPassword = (e: SyntheticEvent) => {\r\n        e.preventDefault();\r\n        if(changePasswordEmail.length)\r\n            dispatch(restorePassword('/password-reset', changePasswordEmail));\r\n    }\r\n\r\n    const setValue = (e: SyntheticEvent) => {\r\n        dispatch({\r\n            type: SET_RESTORE_EMAIL,\r\n            email: (e.target as HTMLInputElement).value\r\n        });\r\n    }\r\n\r\n    return (\r\n        changePasswordRequest ? (\r\n        <Spinner />\r\n        ) : ( isAccessTokenExist ) ? (\r\n        <Redirect to={'/'} />\r\n        ) : ( changePasswordMessage ) ? (\r\n        <Redirect to={'/reset-password'} /> \r\n        ) : (\r\n        <form className={styles.main} onSubmit={reinstallPassword}>\r\n            <section className={`${styles.container} text`}>\r\n                <h1 className={`${styles.title} text_type_main-medium`}>\r\n                    Восстановление пароля\r\n                </h1>\r\n                <div className={styles.inputLarge}>\r\n                    <Input\r\n                        type={'email'}\r\n                        placeholder={'Укажите e-mail'}\r\n                        onChange={(e) => setValue(e)}\r\n                        value={changePasswordEmail}\r\n                        name={'E-mail'}            \r\n                        size={'default'}\r\n                        />\r\n                </div>\r\n                <div className='mt-6 mb-20'>\r\n                    <Button \r\n                        type=\"primary\" \r\n                        size=\"medium\">\r\n                        Восстановить\r\n                    </Button>\r\n                </div>\r\n                <section className={styles.questions}>\r\n                    <p className={`${styles.question} text_type_main-default`}>\r\n                        <span>Вспомнили пароль? </span>\r\n                        <Link \r\n                            to='/login'\r\n                            className={styles.link}>\r\n                            Войти\r\n                        </Link>\r\n                    </p>   \r\n                </section>\r\n            </section>        \r\n        </form>\r\n        )\r\n  );\r\n}\r\n\r\nexport default ForgotPasswordPage;","import React, { FunctionComponent, SyntheticEvent } from 'react';\r\nimport { useSelector, useDispatch } from '../services/types/hooks';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { getNewPassword } from '../services/thunks/access';\r\nimport { Input, Button } from \r\n    '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { dispatchData } from '../services/action-creators';\r\n\r\nimport styles from './page.module.css';\r\nimport Spinner from '../components/spinner/spinner';\r\n\r\nconst ResetPasswordPage: FunctionComponent = () => {\r\n    const dispatch = useDispatch();\r\n    const { \r\n        user: {newPassword}, \r\n        restoreCode,\r\n        newPasswordRequest, \r\n        changePasswordMessage \r\n    } = useSelector((store: any) => store.access);\r\n    const isAccessTokenExist: boolean = \r\n        document.cookie.indexOf('accessToken=') !== -1;\r\n\r\n    const restorePassword: () => void = () => \r\n        dispatch(getNewPassword('/password-reset/reset', newPassword, restoreCode));\r\n\r\n    const setValue = (e: SyntheticEvent) => {\r\n        dispatch(dispatchData(\r\n            (e.target as HTMLInputElement).name,\r\n            (e.target as HTMLInputElement).value\r\n        ));\r\n    }\r\n\r\n    return (\r\n        newPasswordRequest ? (\r\n        <Spinner />\r\n        ) : ( isAccessTokenExist || !changePasswordMessage ) ? (\r\n        <Redirect to={'/'} />\r\n        ) : (\r\n        <form className={styles.main} onSubmit={restorePassword}>\r\n            <section className={`${styles.container} text`}>\r\n                <h1 className={`${styles.title} text_type_main-medium`}>\r\n                    Восстановление пароля\r\n                </h1>\r\n                <div className={styles.inputLarge}>\r\n                    <Input\r\n                        type={'password'}\r\n                        placeholder={'Введите новый пароль'}\r\n                        onChange={(e) => setValue(e)}\r\n                        value={newPassword}\r\n                        name={'password'}    \r\n                        icon={'ShowIcon'}            \r\n                        size={'default'}\r\n                        />\r\n                </div>\r\n                <div className={styles.inputLarge}>\r\n                    <Input\r\n                        type={'text'}\r\n                        placeholder={'Введите код из письма'}\r\n                        onChange={(e) => setValue(e)}\r\n                        value={restoreCode}\r\n                        name={'code'}         \r\n                        size={'default'}\r\n                        />\r\n                </div>\r\n                <div className='mt-6 mb-20'>\r\n                    <Button type=\"primary\" size=\"medium\">\r\n                        Сохранить\r\n                    </Button>\r\n                </div>\r\n                <section className={styles.questions}>\r\n                    <p className={`${styles.question} text_type_main-default`}>\r\n                        <span>Вспомнили пароль? </span>\r\n                        <Link \r\n                            to='/login'\r\n                            className={styles.link}>\r\n                            Войти\r\n                        </Link>\r\n                    </p>   \r\n                </section>\r\n            </section>        \r\n        </form>\r\n        )\r\n  );\r\n}\r\n\r\nexport default ResetPasswordPage;","import React, { FunctionComponent, SyntheticEvent, FormEvent } from 'react';\r\nimport { useSelector, useDispatch } from '../services/types/hooks';\r\nimport { CANCEL_UPDATE_USER_DATA } \r\n    from '../services/action-constants/access';\r\nimport { getUserData } from '../services/thunks/access';\r\nimport { Input, Button } from \r\n    '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { dispatchData } from '../services/action-creators';\r\n\r\nimport styles from './profile.module.css';\r\n\r\ninterface SubmitEvent extends Event {\r\n    readonly submitter: HTMLElement;\r\n}\r\n\r\nconst ProfileInputsPage: FunctionComponent = () => {\r\n    const dispatch = useDispatch();\r\n    const { name, login, email, password } = \r\n        useSelector((store: any) => store.access.user);\r\n    \r\n    const setValue = (e: SyntheticEvent) => {\r\n        dispatch(dispatchData(\r\n            (e.target as HTMLInputElement).name,\r\n            (e.target as HTMLInputElement).value\r\n        ));\r\n    }\r\n\r\n    const onFormClick = async (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        const clickName = (e.nativeEvent as SubmitEvent).submitter.innerText;\r\n        const userData = { name, email };\r\n        clickName === 'Сохранить' ? \r\n            dispatch(getUserData('PATCH', userData)) : \r\n            dispatch(getUserData('GET'));\r\n            \r\n        clickName === 'Отмена' && \r\n        dispatch({ type: CANCEL_UPDATE_USER_DATA });\r\n    }\r\n\r\n    return (\r\n            <form className={`${styles.container} text`} onSubmit={onFormClick}>\r\n                <div className={styles.inputLarge}>\r\n                    <Input\r\n                        type={'text'}\r\n                        placeholder={'Имя'}\r\n                        name={'name'}\r\n                        icon={'EditIcon'}            \r\n                        size={'default'}\r\n                        value={name}\r\n                        onChange={setValue}\r\n                        />\r\n                </div>\r\n                <div className={styles.inputLarge}>\r\n                    <Input\r\n                        type={'text'}\r\n                        placeholder={'Логин'}\r\n                        name={'login'}\r\n                        icon={'EditIcon'}            \r\n                        size={'default'}\r\n                        value={login}\r\n                        onChange={setValue}\r\n                        />\r\n                </div>\r\n                <div className={styles.inputLarge}>\r\n                    <Input\r\n                        type={'password'}\r\n                        placeholder={'Пароль'}\r\n                        name={'password'}    \r\n                        icon={'EditIcon'}        \r\n                        size={'default'}\r\n                        value={password}\r\n                        onChange={setValue}\r\n                        />\r\n                </div>\r\n                <section className={styles.buttons}>\r\n                    <Button \r\n                        type=\"secondary\" \r\n                        size=\"medium\">\r\n                        Отмена\r\n                    </Button>\r\n                    <Button \r\n                        type=\"primary\" \r\n                        size=\"medium\">\r\n                        Сохранить\r\n                    </Button>\r\n                </section>\r\n            </form>\r\n  );\r\n}\r\n\r\nexport default ProfileInputsPage;","import React, { FunctionComponent } from \"react\";\r\n\r\nimport styles from './ingredient-icon.module.css';\r\n\r\ntype TIngredientIconProps = {\r\n    image: string;\r\n    shiftRatio?: number;\r\n    rest?: number | boolean;\r\n}\r\n\r\nconst IngredientIcon: FunctionComponent<TIngredientIconProps> = ({ image, shiftRatio, rest }) => {\r\n\r\n    const shift = shiftRatio && styles[`shift-${shiftRatio}`];\r\n\r\n    return (\r\n        <div className={`${styles.icon} ${shift}`}>\r\n            <div className={`${styles.overlay}`}>\r\n                { \r\n                    rest && (\r\n                    <div className={`${styles.rest} text text_type_main-default`}>\r\n                        {`+${rest}`}\r\n                    </div>\r\n                    ) \r\n                }\r\n                <img src={image} alt=\"ingredient\" width=\"112\" height=\"56\"/>\r\n            </div>        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IngredientIcon;","import React, { FunctionComponent } from \"react\";\r\nimport { useSelector } from \"../../services/types/hooks\";\r\nimport IngredientIcon from '../ingredient-icon/ingredient-icon';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { getTime } from '../../utils/utils';\r\nimport { TProductItem } from '../../utils/types';\r\n\r\nimport { CurrencyIcon } from \r\n    '@ya.praktikum/react-developer-burger-ui-components';\r\nimport styles from './order-block.module.css';\r\n\r\ntype TOrderBlockProps = {\r\n    number: number;\r\n    createdAt: string;\r\n    name: string;\r\n    status: string;\r\n    ingredients: string[];\r\n}\r\ntype TDict = {\r\n    [key: string]: string;\r\n}\r\n\r\nconst OrderBlock: FunctionComponent<TOrderBlockProps> = \r\n    ({ number, name, createdAt, status, ingredients }) => {\r\n\r\n    const { ingredientsData }: { ingredientsData: TProductItem[] } = \r\n        useSelector(store => store.ingredients);\r\n    const location = useLocation();    \r\n\r\n    let bunFlag = false;\r\n    const price = ingredients.reduce((accum: number, id: string) => {\r\n        const item = ingredientsData.find((item: TProductItem) => item._id === id);\r\n        if(item!.type === 'bun'){\r\n            if(bunFlag) return accum;\r\n            bunFlag = true; \r\n        }\r\n        \r\n        return accum + (item!.type === 'bun' ? item!.price * 2 : item!.price);\r\n    }, 0)\r\n\r\n    const images = Array.from(\r\n        new Set(\r\n            ingredients.map((id: string) =>\r\n                ingredientsData.find((item: TProductItem) => item._id === id)!.image_mobile)\r\n            )\r\n        ).sort();\r\n\r\n    const engToRusStatusDict: TDict = {\r\n        done: 'Выполнен',\r\n        pending: 'Готовится',\r\n        created: 'Готов'\r\n    }\r\n    \r\n    return (        \r\n        <li className={`${styles.orderBlock} text text_type_digits-default`}>\r\n            <div className={styles.meta}>\r\n                <span className={``}>{`#${number}`}</span>\r\n                <span className={`${styles.date} text_type_main-default`}>{getTime(createdAt)}</span>\r\n            </div>\r\n            <h2 className={`${styles.title} text_type_main-medium mt-6 ${location.pathname === '/feed' ? 'mb-6' : 'mb-2'}`}>{name}</h2>\r\n            <p className={`${styles.status} text_type_main-default mt-2 mb-6 ${status === 'done' && styles.statusDone}`}>\r\n                { !(location.pathname === '/feed') && engToRusStatusDict[status]}\r\n                </p>\r\n            <div className={styles.info}>\r\n                <ul className={styles.icons}>\r\n                    {\r\n                        images.map((image: string, i: number) => {\r\n                            if(i >= 6) return;\r\n                            return (\r\n                                <li key={i}>\r\n                                    <IngredientIcon \r\n                                        image={image}                                          \r\n                                        shiftRatio={i} \r\n                                        rest={i === 5 && images.length - 6} />\r\n                                </li>\r\n                            )\r\n                        })\r\n                    }\r\n                </ul>\r\n                <div className={styles.priceBlock}>\r\n                    <span className={styles.price}>{price}</span>\r\n                    <CurrencyIcon type=\"secondary\" />\r\n                </div>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default OrderBlock;","export const WS_CONNECTION_START: 'WS_CONNECTION_START' = 'WS_CONNECTION_START';\r\nexport const WS_CONNECTION_SUCCESS: 'WS_CONNECTION_SUCCESS' = 'WS_CONNECTION_SUCCESS';\r\nexport const WS_CONNECTION_ERROR: 'WS_CONNECTION_ERROR' = 'WS_CONNECTION_ERROR';\r\nexport const WS_CONNECTION_CLOSED: 'WS_CONNECTION_CLOSED' = 'WS_CONNECTION_CLOSED';\r\nexport const WS_GET_ORDERS: 'WS_GET_ORDERS' = 'WS_GET_ORDERS';\r\nexport const WS_SEND_ORDER: 'WS_SEND_ORDER' = 'WS_SEND_ORDER';","import React, { useEffect, FunctionComponent } from \"react\";\r\nimport OrderBlock from '../order-block/order-block';\r\nimport { useDispatch, useSelector } from \"../../services/types/hooks\";\r\nimport { WS_CONNECTION_START, WS_CONNECTION_CLOSED } from \r\n    '../../services/action-constants/ws';\r\nimport { WS_ORDERS } from '../../utils/constants';\r\nimport { Link, useLocation, useRouteMatch } from \"react-router-dom\";\r\nimport { TWSOrder } from '../../utils/types';\r\n\r\nimport styles from './orders-list.module.css';\r\n\r\nconst OrdersList: FunctionComponent = () => {\r\n    const location = useLocation();\r\n    const { url } = useRouteMatch();\r\n\r\n    const wsUrl = `${WS_ORDERS}/all`;\r\n    const isTokenExist = document.cookie.match(/(accessToken=)(.+)/);\r\n    let wsUrlToken = '';\r\n    if(isTokenExist)\r\n        wsUrlToken = `${WS_ORDERS}?token=${\r\n            document.cookie.match(/(accessToken=)(.+)/)![2].split(' ')[1]}`;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { orders }: { orders: TWSOrder[] } = useSelector(store => store.ws);\r\n\r\n    useEffect(() => {\r\n        dispatch({ \r\n            type: WS_CONNECTION_START,\r\n            payload: location.pathname === '/feed' ? wsUrl : wsUrlToken\r\n        });\r\n        return () => {\r\n            dispatch({ type: WS_CONNECTION_CLOSED });\r\n        }\r\n    }, [dispatch])\r\n\r\n    const isProfile = location.pathname.split('/')[1] === 'profile';\r\n\r\n    return (\r\n        <article className={styles.fullFeed}>\r\n            <ul className={`${styles.list} ${isProfile && styles.wide}`}>\r\n                {\r\n                    orders.map((order: TWSOrder, i: number) => (\r\n                        <Link to={{ \r\n                                pathname: `${url}/${order.number}`, \r\n                                state: { background: location }\r\n                                }}\r\n                                className={`${styles.link} ${isProfile && styles.wideLink}`} key={i}>\r\n                            <OrderBlock {...order} />\r\n                        </Link>\r\n                        )\r\n                    )\r\n                }\r\n            </ul>\r\n        </article>\r\n    )\r\n}\r\n\r\nexport default OrdersList;","import React, { FunctionComponent } from 'react';\r\nimport OrdersList from '../components/orders-list/orders-list';\r\n\r\nimport styles from './profile.module.css';\r\n\r\nconst OrderHistoryPage: FunctionComponent = () => {\r\n\r\n    return (        \r\n        <OrdersList />\r\n  );\r\n}\r\n\r\nexport default OrderHistoryPage;","import React, { FunctionComponent } from 'react';\r\nimport { useSelector, useDispatch } from '../services/types/hooks';\r\nimport { NavLink, Switch, Route, useRouteMatch } from 'react-router-dom';\r\nimport ProfileInputsPage from './profile-inputs';\r\nimport OrderHistoryPage from './order-history';\r\nimport { logoutUser } from '../services/thunks/access';\r\nimport Spinner from '../components/spinner/spinner';\r\n\r\nimport styles from './profile.module.css';\r\n\r\nconst ProfilePage: FunctionComponent = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { path, url } = useRouteMatch();\r\n    const { logoutRequest } = useSelector((store: any) => store.access);\r\n\r\n    const onLogout: () => void = () =>\r\n        dispatch(logoutUser());\r\n\r\n    return (\r\n        logoutRequest ? (\r\n        <Spinner /> \r\n        ) : (\r\n        <main className={styles.profile}>\r\n            <section className={styles.navBar}>\r\n                <nav className=\"mb-20\">\r\n                    <ul className={`${styles.profileList} text text_type_main-medium text_color_inactive`}>\r\n                        <li className={`${styles.profileListItem}`}>\r\n                            <NavLink \r\n                                to={{pathname: '/profile'}} exact\r\n                                className={styles.profileLink}\r\n                                activeClassName={styles.activeNavItem}>\r\n                                Профиль\r\n                            </NavLink>\r\n                        </li>\r\n                        <li className={`${styles.profileListItem}`}>\r\n                            <NavLink \r\n                                to={{pathname: `${url}/orders`}} exact\r\n                                className={styles.profileLink}\r\n                                activeClassName={styles.activeNavItem}>\r\n                                История заказов\r\n                            </NavLink>\r\n                        </li>\r\n                        <li className={`${styles.profileListItem}`}>\r\n                            <NavLink \r\n                                to=\"/login\" exact \r\n                                className={styles.profileLink}\r\n                                activeClassName={styles.activeNavItem}\r\n                                onClick={onLogout}>\r\n                                Выход\r\n                            </NavLink>\r\n                        </li>\r\n                    </ul>\r\n                </nav>                \r\n                <p className={`${styles.textExtra} text_type_main-default`}>\r\n                    В этом разделе вы можете изменить свои персональные данные\r\n                </p>   \r\n            </section>\r\n            <Switch>\r\n                <Route path={path} exact>\r\n                    <ProfileInputsPage />\r\n                </Route>\r\n                <Route path={`${path}/orders`} exact>\r\n                    <OrderHistoryPage />\r\n                </Route>\r\n            </Switch>\r\n        </main>\r\n        )\r\n  );\r\n}\r\n\r\nexport default ProfilePage;","import React, { FunctionComponent } from 'react';\r\n\r\nimport styles from './profile.module.css';\r\n\r\nconst NotFound404: FunctionComponent = () => {\r\n    return (        \r\n            <section className={`${styles.container} text`}>\r\n                Ошибка 404\r\n            </section>\r\n  );\r\n}\r\n\r\nexport default NotFound404;","import React, { FunctionComponent } from \"react\";\r\nimport { useSelector } from \"../../services/types/hooks\";\r\nimport { TWSOrder } from '../../utils/types';\r\n\r\nimport styles from './stats.module.css';\r\n\r\nconst Stats: FunctionComponent = () => {\r\n\r\n    const { orders, total, totalToday }: \r\n    { orders: TWSOrder[], total: number, totalToday: number } = useSelector(store => store.ws);\r\n\r\n    const doneOrders: TWSOrder[] = orders.filter(order => order.status === 'done');\r\n    const inProgressOrders: TWSOrder[] = orders.filter(order => order.status === 'created');\r\n\r\n    const getTotalSection = (title: string, total: number) => {\r\n        return (\r\n            <section className={`${styles.ready} mb-15`}>\r\n                <h3 className={`${styles.totalTitle} text_type_main-medium`}>{title}</h3>\r\n                <p className={`${styles.total} text_type_digits-large`}>{total}</p>\r\n            </section>\r\n        )\r\n    }\r\n\r\n    const getNumberSection = (title: string, orders: TWSOrder[]) => {\r\n        return (\r\n            <div className={styles.numbers}>\r\n                    <h3 className={`text_type_main-medium mb-6 mt-1`}>{title}</h3>\r\n                    <ul className={styles.allNumbers}>\r\n                        {\r\n                            orders.map((order: TWSOrder, i: number) => (                               \r\n                                <li className={`${styles.num} ${title === 'В работе:' ? \r\n                                    styles.inProgress : styles.done} text_type_digits-default`} key={i}>\r\n                                    {order.number}\r\n                                </li>))\r\n                        }\r\n                    </ul>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <article className={`${styles.stats} text`}>\r\n            <section className={`${styles.orders} mb-15`}>\r\n                { getNumberSection('Готовы:', doneOrders) }\r\n                { getNumberSection('В работе:', inProgressOrders) }\r\n            </section>\r\n            { getTotalSection('Выполнено за все время:', total) }\r\n            { getTotalSection('Выполнено за сегодня:', totalToday) }\r\n        </article>\r\n    )\r\n}\r\n\r\nexport default Stats;","import React, { FunctionComponent } from \"react\";\r\nimport OrdersList from \"../components/orders-list/orders-list\";\r\nimport Stats from '../components/stats/stats';\r\n\r\nimport styles from './page.module.css';\r\n\r\nconst FeedPage: FunctionComponent = () => {\r\n    \r\n    return (\r\n        <main className={styles.feed}>\r\n            <h1 className={`text text_type_main-large mb-5`}>Лента заказов</h1>\r\n            <article className={styles.content}>\r\n                <OrdersList />\r\n                <Stats />\r\n            </article>            \r\n        </main>\r\n    )\r\n}\r\n\r\nexport default FeedPage;","import React, { FunctionComponent } from \"react\";\r\nimport IngredientIcon from '../ingredient-icon/ingredient-icon';\r\nimport { TProductItem } from '../../utils/types';\r\n\r\nimport { CurrencyIcon } from \r\n    '@ya.praktikum/react-developer-burger-ui-components';\r\nimport styles from './ingredients-line.module.css';\r\n\r\ntype TIngredientsLineProps = {\r\n    ingredientId: string;\r\n    ingredients: TProductItem[];\r\n    numbers: number;\r\n};\r\n\r\nconst IngredientsLine: FunctionComponent<TIngredientsLineProps> = \r\n    ({ ingredientId, ingredients, numbers }) => {\r\n    \r\n    const { image_mobile: image, price, name, type } = \r\n        ingredients.find((item: TProductItem) => \r\n            item._id === ingredientId)!;\r\n\r\n    return (\r\n        <li className={`${styles.ingredientsLine} text text_type_digits-default`}>\r\n            <div className={styles.itemData}>\r\n                <IngredientIcon image={image} />\r\n                <h2 className={`${styles.title} text_type_main-default mr-4`}>\r\n                    {name}\r\n                </h2>\r\n            </div>\r\n            <div className={styles.priceBlock}>\r\n                <span className={styles.price}>\r\n                    { \r\n                        type === 'bun' ? `2 x ${price}` : `${numbers} x ${price}`\r\n                    }\r\n                </span>\r\n                <CurrencyIcon type=\"secondary\" />\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default IngredientsLine;","import React, { useEffect, FunctionComponent } from \"react\";\r\nimport { useSelector, useDispatch } from \"../../services/types/hooks\";\r\nimport { useLocation, useRouteMatch } from \"react-router-dom\";\r\nimport { getTime } from '../../utils/utils';\r\nimport IngredientsLine from '../ingredients-line/ingredients-line';\r\nimport Spinner from \"../spinner/spinner\";\r\nimport { WS_CONNECTION_START, WS_CONNECTION_CLOSED } from \r\n    '../../services/action-constants/ws';\r\nimport { WS_ORDERS } from '../../utils/constants';\r\nimport { TWSOrder, TProductItem } from '../../utils/types';\r\n\r\nimport { CurrencyIcon } from \r\n    '@ya.praktikum/react-developer-burger-ui-components';\r\nimport styles from './order-stats.module.css';\r\n\r\ntype TDict = {\r\n    [key: string]: string;\r\n};\r\n\r\ntype TMap = {\r\n    [key: string]: number;\r\n};\r\n\r\ntype TIngredient = {\r\n    ingredientId: string;\r\n    numbers: number;\r\n};\r\n\r\ninterface MatchParams {\r\n    id: string;\r\n}\r\n\r\nconst OrderStats: FunctionComponent = () => {\r\n    const { orders }: { orders: TWSOrder[] } = useSelector(store => store.ws);\r\n    const { params } = useRouteMatch<MatchParams>();\r\n    const { ingredientsData, ingredientsRequest }:\r\n    { ingredientsData: TProductItem[], ingredientsRequest: boolean } = \r\n        useSelector(store => store.ingredients);\r\n\r\n    const dispatch = useDispatch();\r\n    const location = useLocation();\r\n    const engToRusStatusDict: TDict = {\r\n        done: 'Выполнен',\r\n        pending: 'Готовится',\r\n        created: 'Готов'\r\n    }\r\n    const collapseList = (list: string[]) => {\r\n        const map: TMap = {};\r\n        list.forEach((item: string) => {\r\n            if(!map[item])\r\n                map[item] = 1;\r\n            else\r\n                map[item]++;\r\n        });\r\n        const result = [];\r\n        for(let key in map){\r\n            result.push({\r\n                ingredientId: key,\r\n                numbers: map[key]\r\n            });\r\n        };\r\n        return result;\r\n    }\r\n\r\n    const wsUrl = `${WS_ORDERS}/all`;\r\n    const isTokenExist = document.cookie.match(/(accessToken=)(.+)/);\r\n    let wsUrlToken = '';\r\n    if(isTokenExist)\r\n        wsUrlToken = `${WS_ORDERS}?token=${\r\n            document.cookie.match(/(accessToken=)(.+)/)![2].split(' ')[1]}`;\r\n\r\n    useEffect(() => {\r\n        dispatch({ \r\n            type: WS_CONNECTION_START,\r\n            payload: location.pathname === `/feed/${params.id}` ? wsUrl : wsUrlToken\r\n        });\r\n        return () => {\r\n            dispatch({ type: WS_CONNECTION_CLOSED });\r\n        }\r\n    }, [dispatch])\r\n\r\n    let order, price;\r\n    \r\n    if(orders.length){\r\n        order = orders.find((order: TWSOrder) => order.number === Number(params.id));\r\n        let bunFlag = false;\r\n        price = order!.ingredients.reduce((accum: number, id: string) => {\r\n            const item = ingredientsData.find((item: TProductItem) => item._id === id);\r\n            if(item!.type === 'bun'){\r\n                if(bunFlag) return accum;\r\n                bunFlag = true; \r\n            }\r\n\r\n            return accum + (item!.type === 'bun' ? item!.price * 2 : item!.price);\r\n            }, 0);\r\n    }\r\n \r\n    return (\r\n        <>\r\n        {\r\n            ingredientsRequest || !order ? (\r\n                <Spinner /> ) : (\r\n                <section className={`${styles.orderStats} text text_type_digits-default`}>\r\n                    <div className={styles.number}>{`#${order.number}`}</div>\r\n                    <h2 className={`text_type_main-medium mt-10 mb-3`}>\r\n                        {order.name}\r\n                    </h2>\r\n                    <p className={`text_type_main-default mb-10 ${order.status === 'done' && styles.statusDone}`}>\r\n                        { engToRusStatusDict[order.status] }\r\n                    </p>\r\n                    <div className={styles.ingredients}>\r\n                        <h3 className=\"text_type_main-medium\">Состав:</h3>\r\n                        <ul className={`${styles.ingredientsList} pr-6`}>\r\n                            {\r\n                                collapseList(order.ingredients).map((ingredientData: TIngredient, i: number) => {\r\n                                    return (\r\n                                        <IngredientsLine \r\n                                            ingredients={ingredientsData}\r\n                                            {...ingredientData} key={i} />\r\n                                    )\r\n                                })\r\n                            }\r\n                        </ul>                \r\n                    </div>\r\n                    <div className={`${styles.data} mt-10`}>\r\n                        <span className={`${styles.date} text_type_main-default`}>\r\n                            {getTime(order.createdAt)}\r\n                        </span>\r\n                        <div className={styles.priceBlock}>\r\n                            <span className={styles.price}>{price}</span>\r\n                            <CurrencyIcon type=\"secondary\" />\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            )\r\n        }\r\n        </>        \r\n    )\r\n}\r\n\r\nexport default OrderStats;","import React, { FunctionComponent } from \"react\";\r\nimport OrderStats from \"../components/order-stats/order-stats\";\r\n\r\nimport styles from './page.module.css';\r\n\r\nconst OrderStatsPage: FunctionComponent = () => {\r\n    \r\n    return (\r\n        <main className={styles.orderStatsPage}>\r\n            <OrderStats />\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default OrderStatsPage;","import React, { FunctionComponent, ReactElement } from \"react\";\r\nimport { NavLink, useLocation } from 'react-router-dom';\r\nimport { useSelector } from \"../../services/types/hooks\";\r\nimport { BurgerIcon, ListIcon, ProfileIcon } from \r\n'@ya.praktikum/react-developer-burger-ui-components';\r\n\r\nimport styles from './nav-button.module.css';\r\n\r\ntype TNavButtonProps = {\r\n    title: string;\r\n    logo: string;\r\n};\r\n\r\ntype TDictTitleToLink = {\r\n    [name: string]: string;\r\n};\r\n\r\ntype TDictLogoToImg = {\r\n    [name: string]: () => ReactElement;\r\n}\r\n\r\ntype TType = 'secondary' | 'primary' | 'error' | 'success';\r\n\r\nconst NavButton: FunctionComponent<TNavButtonProps> = ({ title, logo }) => {\r\n    const dictLogoToImg: TDictLogoToImg = {\r\n        burger: () => <BurgerIcon type={getType(title)} />,\r\n        list: () => <ListIcon type={getType(title)} />,\r\n        profile: () => <ProfileIcon type={getType(title)} />\r\n    }\r\n\r\n    const location = useLocation();\r\n\r\n    const { currentIngredient: {_id} } = \r\n        useSelector(store => store.ingredients);\r\n\r\n    const dictTitleToLink: TDictTitleToLink = {\r\n        'Конструктор': '/',\r\n        'Лента заказов': '/feed',\r\n        'Личный кабинет': '/profile'\r\n    }\r\n\r\n    const getType: (title: string) => TType = (title) =>\r\n        title === 'Конструктор' && location.pathname === '/' || \r\n        title === 'Конструктор' && location.pathname === `/ingredients/${_id}` ||\r\n        title === 'Конструктор' && location.pathname === `/order` ||\r\n        title === 'Лента заказов' && location.pathname === '/feed' ||\r\n        title === 'Личный кабинет' && location.pathname === '/profile' ||\r\n        title === 'Личный кабинет' && location.pathname === `/profile/orders` ?\r\n        'primary' : 'secondary';\r\n\r\n    const titleStyle: string = `text text_type_main-default pl-2`;\r\n    const isExact: boolean = \r\n        location.pathname === '/' || \r\n        location.pathname === `/ingredients/${_id}` ||\r\n        location.pathname === `/order`;\r\n\r\n    return (\r\n        <NavLink \r\n            to={{ pathname: dictTitleToLink[title] }} \r\n            className={`${styles.navButton} pl-5 pr-5 pt-4 pb-4 text_color_inactive`}\r\n            activeClassName={styles.active}\r\n            exact={!isExact}\r\n            >\r\n            {dictLogoToImg[logo]()}\r\n            <span className={titleStyle}>{title}</span>\r\n        </NavLink>\r\n    )\r\n}\r\n\r\nexport default NavButton;","import React, { FunctionComponent } from \"react\";\r\nimport NavButton from \"../nav-button/nav-button\";\r\nimport { THeaderButtonsData } from '../../utils/types';\r\n\r\nimport styles from './nav.module.css';\r\n\r\ntype TNavProps = {\r\n    items: Array<THeaderButtonsData>\r\n}\r\n\r\nconst Nav: FunctionComponent<TNavProps> = ({ items }) => {\r\n    return (\r\n        <nav className={styles.nav}>\r\n            { \r\n                items.map((item, i) => \r\n                    <NavButton {...item} key={i} />)\r\n            } \r\n        </nav> \r\n    )\r\n}\r\n\r\nexport default Nav;","import React, { FunctionComponent } from \"react\";\r\nimport NavButton from \"../nav-button/nav-button\";\r\nimport { THeaderButtonsData } from '../../utils/types';\r\n\r\nimport styles from './auth.module.css';\r\n\r\nconst Auth: FunctionComponent<THeaderButtonsData> = (props) => {\r\n    return (\r\n        <NavButton {...props} />\r\n    )\r\n}\r\n\r\nexport default Auth;","import React, { FunctionComponent } from 'react';\r\nimport Nav from '../nav/nav';\r\nimport Auth from '../auth/auth';\r\nimport { Link } from 'react-router-dom';\r\nimport { THeaderButtonsData } from '../../utils/types';\r\nimport { Logo } from \r\n'@ya.praktikum/react-developer-burger-ui-components';\r\nimport styles from './app-header.module.css';\r\n\r\nconst AppHeader: FunctionComponent = () => {\r\n    \r\n    const navButtonsData: Array<THeaderButtonsData> = [\r\n        { title: 'Конструктор', logo: 'burger' },\r\n        { title: 'Лента заказов', logo: 'list' }\r\n    ]\r\n    const authButtonData: THeaderButtonsData = \r\n        { title: 'Личный кабинет', logo: 'profile' };\r\n\r\n    return (\r\n        <header className={`${styles.appHeader} pt-4 pb-4`}>\r\n            <div className={styles.appHeaderContainer}>\r\n                <Nav items={navButtonsData} />\r\n                <div className={styles.logo}>\r\n                    <Link to={'/'}>\r\n                        <Logo/>\r\n                    </Link>\r\n                </div>\r\n                <Auth {...authButtonData} />\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default AppHeader;","import React, { FunctionComponent } from \"react\";\r\n\r\nimport styles from './fact.module.css';\r\n\r\ntype TFactProps = {\r\n    title?: string;\r\n    value?: number;\r\n    width: string;\r\n    key: string;\r\n};\r\n\r\nconst Fact: FunctionComponent<TFactProps> = ({ title, value, width }) => {\r\n    const w = width === 'wide' ? styles.wide : '';\r\n    return (\r\n        <div className={`${styles.fact} ${w} text text_color_inactive`}>\r\n            <span className={`${styles.text} text_type_main-default`}>\r\n                {title}\r\n            </span>\r\n            <span className={`${styles.text} text_type_digits-default`}>\r\n                {value}\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Fact;","import React, { FunctionComponent } from \"react\";\r\nimport Fact from '../fact/fact';\r\nimport { useSelector } from '../../services/types/hooks';\r\nimport { useParams, useLocation } from 'react-router-dom';\r\nimport Spinner from \"../spinner/spinner\";\r\nimport { TProductItem } from '../../utils/types';\r\nimport { TLocation } from '../app/app';\r\n \r\nimport styles from './ingredient-details.module.css';\r\n\r\ntype TIngredientId = { \r\n    ingredientId: string;\r\n};\r\n\r\ntype TKeyToTabNameMap = {\r\n    [name: string]: string;\r\n}\r\n\r\ntype TIngredientData = {\r\n    title: string;\r\n    value: number;\r\n}\r\n\r\ntype TIngredient = { [key: string]: any } | undefined;\r\n\r\ntype TItem = TIngredientData | undefined;\r\n\r\nconst IngredientDetails: FunctionComponent = () => {\r\n    const { ingredientsData, ingredientsRequest } :\r\n    { ingredientsData: TProductItem[], ingredientsRequest: boolean} = \r\n        useSelector((store: any) => store.ingredients);\r\n\r\n    const { ingredientId }: TIngredientId = useParams();\r\n    const location: TLocation = useLocation();\r\n\r\n    const ingredient: TIngredient = ingredientsData.find((item: TProductItem) => \r\n            item._id === ingredientId);\r\n\r\n    const keyToTabNameMap: TKeyToTabNameMap = {\r\n        calories: 'Калории,ккал',\r\n        proteins: 'Белки, г',\r\n        fat: 'Жиры, г',\r\n        carbohydrates: 'Углеводы, г'\r\n    }\r\n\r\n    const createFactsArray: () => Array<TItem> = () => {\r\n        const items: Array<TItem> = [];\r\n        for(let key in ingredient){\r\n            if(keyToTabNameMap[key])\r\n                items.push(\r\n                    { title: keyToTabNameMap[key],\r\n                        value: ingredient[key] }\r\n                );\r\n        }      \r\n        return [ items.pop(), ...items.sort()];\r\n    }\r\n\r\n    const center: string = !location.state?.background ? styles.center : '';\r\n    const box: string = !location.state?.background ? styles.box : '';\r\n\r\n    return (\r\n        ingredientsRequest ? (\r\n            <Spinner />\r\n        ) : (\r\n        <>\r\n            <div className={`${styles.titleContainer} ${box}`}>\r\n                <h3 className={`${styles.title} ${center} text text_type_main-large pr-15`}>\r\n                    Детали ингредиента\r\n                </h3>\r\n            </div>\r\n            <div className={styles.ingredientDetails}>            \r\n                <img src={ingredient?.image_large} \r\n                    className={styles.image} \r\n                    alt={ingredient?.name} />\r\n                <p className={`${styles.name} text text_type_main-medium mt-4 mb-8`}>\r\n                    {ingredient?.name}\r\n                </p>\r\n                <div className={styles.nutritionFacts}>\r\n                    { createFactsArray().map((item: TItem, i: number) => {\r\n                        const w = i === 0 ? 'wide' : 'normal';\r\n                        return <Fact { ...item} key={i + 'str'} width={w} />\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </>\r\n        )\r\n    );\r\n}\r\n\r\nexport default IngredientDetails;","export default __webpack_public_path__ + \"static/media/done.0c06983c.png\";","import React, { FunctionComponent } from \"react\";\r\nimport { useSelector } from \"../../services/types/hooks\";\r\nimport { DEFAULT_ORDER_DATA } from \r\n    '../../utils/constants';\r\nimport Spinner from \"../spinner/spinner\";\r\nimport { TOrderResponseData } from '../../utils/types';\r\n\r\nimport styles from './order-details.module.css';\r\nimport done from '../../images/done.png';\r\n\r\nconst OrderDetails: FunctionComponent = () => {\r\n    const { modalData }: { modalData: TOrderResponseData } = useSelector(store => store.modal);\r\n    const { orderRequest }: { orderRequest: boolean } = useSelector(store => store.order);\r\n    const { num, description, extra } = DEFAULT_ORDER_DATA;\r\n\r\n    const orderNum = modalData && modalData.order?.number ? \r\n        modalData.order.number : num;\r\n\r\n    return (\r\n        orderRequest ? (\r\n        <div className={`${styles.loading}`}>\r\n            <Spinner />\r\n        </div>\r\n        ) : (\r\n        <div className={`${styles.orderDetails} text mt-4 mb-15`}>\r\n            <div className={`${styles.num} text_type_digits-large`}>\r\n                {orderNum}\r\n            </div>\r\n            <p className={`${styles.text} text_type_main-medium mt-8`}>\r\n                идентификатор заказа\r\n            </p>\r\n            <img src={done} \r\n                 className={styles.image} \r\n                 alt={description} />\r\n            <div className=\"text_type_main-default mb-2\">\r\n                {description}\r\n            </div>\r\n            <div className=\"text_type_main-default text_color_inactive\">\r\n                {extra}\r\n            </div>\r\n        </div>\r\n        )\r\n    );\r\n}\r\n\r\nexport default OrderDetails;","import React, { FunctionComponent } from \"react\";\r\n\r\nimport styles from './modal-overlay.module.css';\r\n\r\ntype TModalOverlayProps = {\r\n    onClose: () => void;\r\n}\r\n\r\nconst ModalOverlay: FunctionComponent<TModalOverlayProps> = ({ onClose }) => {\r\n    return (\r\n        <div \r\n            className={styles.overlay} \r\n            onClick={onClose}>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ModalOverlay;","import React, { useEffect, FunctionComponent } from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport ModalOverlay from '../modal-overlay/modal-overlay';\r\nimport { CloseIcon } from \r\n    '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\nimport styles from './modal.module.css';\r\n\r\nconst root = document.getElementById('react-modals')!;\r\n\r\ntype TModalProps = {\r\n    onClose: () => void;\r\n}\r\n\r\nconst Modal: FunctionComponent<TModalProps> = ({ children, onClose }) => {\r\n  \r\n    const handleKeyPress: (e: KeyboardEvent) => void = (e) => {\r\n        if(e.key === 'Escape')\r\n            onClose();\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('keydown', handleKeyPress);\r\n        return () => \r\n            document.removeEventListener('keydown', handleKeyPress);\r\n    })\r\n\r\n    const content = (\r\n        <>\r\n            <ModalOverlay onClose={onClose} />\r\n            <div className={`${styles.modal} p-10 pb-15`} tabIndex={0}>\r\n                <div className={styles.close}>\r\n                    <CloseIcon onClick={onClose} type=\"primary\" />       \r\n                </div>               \r\n                { children }\r\n            </div>\r\n        </>\r\n    )\r\n    return ReactDOM.createPortal(content, root);\r\n}\r\n\r\nexport default Modal;","import React, { useEffect, FunctionComponent } from 'react';\r\nimport { \r\n  BrowserRouter as Router, \r\n  Switch, \r\n  Route,\r\n  useHistory,\r\n  useLocation\r\n} from 'react-router-dom';\r\nimport ProtectedRoute from '../protected-route/protected-route';\r\nimport { \r\n  HomePage, \r\n  LoginPage, \r\n  RegisterPage, \r\n  OrderHistoryPage,\r\n  ForgotPasswordPage, \r\n  ResetPasswordPage, \r\n  ProfilePage, \r\n  NotFound404,\r\n  FeedPage,\r\n  OrderStatsPage\r\n} from '../../pages';\r\nimport AppHeader from '../app-header/app-header';\r\nimport IngredientDetails from '../ingredient-details/ingredient-details';\r\nimport OrderDetails from '../order-details/order-details';\r\nimport OrderStats from '../order-stats/order-stats';\r\nimport Modal from '../modal/modal';\r\nimport { useDispatch } from '../../services/types/hooks';\r\nimport { RESET_CURRENT_INGREDIENT } from '../../services/action-constants/ingredients';\r\nimport { CLOSE_MODAL } from '../../services/action-constants/modal';\r\nimport { RESET_ORDER_REQUEST } from '../../services/action-constants/order';\r\nimport { INGREDIENTS_URL } from \r\n  '../../utils/constants';\r\nimport { getIngredients } from '../../services/thunks/ingredients';\r\n\r\nimport styles from './app.module.css';\r\n\r\nexport type TLocationState = {\r\n  from?: string;\r\n  background?: TLocation;\r\n}\r\n\r\nexport type TLocation = {\r\n  hash: string;\r\n  key?: string;\r\n  pathname: string;\r\n  search: string;\r\n  state: TLocationState;\r\n};\r\n\r\nconst App: FunctionComponent = () => {\r\n  const ModalSwitch = () => {\r\n    const dispatch = useDispatch();\r\n    const location: TLocation = useLocation();\r\n    const history = useHistory();\r\n    const background = location.state && location.state.background;\r\n    const onModalClose: () => void = () => {\r\n      dispatch({ type: CLOSE_MODAL });\r\n      dispatch({ type: RESET_CURRENT_INGREDIENT });\r\n      dispatch({ type: RESET_ORDER_REQUEST });\r\n      const url = location.pathname.split('/');\r\n      let path = '';\r\n      if(url[1] === 'ingredients' || url[1] === 'order') {\r\n        path = '/';\r\n      }\r\n      else{      \r\n        for(let i = 1; i < url.length - 1; i++)\r\n          path += `/${url[i]}`;\r\n      }\r\n        \r\n      history.replace({ pathname: path})\r\n    }\r\n    useEffect(() => {\r\n      dispatch(getIngredients(INGREDIENTS_URL));\r\n    }, []);\r\n\r\n    return (\r\n      <div className={styles.app}>\r\n        <AppHeader />\r\n\r\n        <Switch location={background || location}>\r\n          <Route path=\"/\" exact>\r\n            <HomePage />\r\n          </Route>\r\n          <ProtectedRoute path='/profile/orders/:id' exact>\r\n            <OrderStatsPage />\r\n          </ProtectedRoute>\r\n          <Route path='/ingredients/:ingredientId' exact>\r\n            <IngredientDetails />\r\n          </Route>\r\n          <Route path='/order' exact>\r\n            <OrderDetails />           \r\n          </Route>    \r\n          <Route path=\"/login\" exact>\r\n            <LoginPage />\r\n          </Route>\r\n          <Route path=\"/register\" exact>\r\n            <RegisterPage />\r\n          </Route>\r\n          <Route path=\"/forgot-password\" exact>\r\n            <ForgotPasswordPage />\r\n          </Route>\r\n          <Route path=\"/reset-password\" exact>\r\n            <ResetPasswordPage />\r\n          </Route>\r\n          <Route path=\"/feed\" exact>\r\n            <FeedPage />\r\n          </Route>\r\n          <Route path='/feed/:id' exact>\r\n            <OrderStatsPage />\r\n          </Route>\r\n          <ProtectedRoute path=\"/profile\">\r\n            <ProfilePage />\r\n          </ProtectedRoute>\r\n          <Route>\r\n            <NotFound404 />\r\n          </Route>          \r\n        </Switch>\r\n        {background && (\r\n          <Route path='/feed/:id' exact>\r\n            <Modal onClose={onModalClose}>\r\n              <OrderStats />\r\n            </Modal>\r\n          </Route>\r\n        )}\r\n        {background && (\r\n          <ProtectedRoute path='/profile/orders/:id' exact>\r\n              <Modal onClose={onModalClose}>\r\n                <OrderStats />\r\n              </Modal>\r\n          </ ProtectedRoute>\r\n        )}\r\n        {background && (\r\n          <Route path='/order'>\r\n            <Modal onClose={onModalClose}>\r\n              <OrderDetails />\r\n            </Modal>           \r\n          </Route>\r\n        )}\r\n        {background && (\r\n          <Route path='/ingredients/:ingredientId'>\r\n            <Modal onClose={onModalClose}>\r\n              <IngredientDetails />\r\n            </Modal>\r\n          </Route>\r\n        )}        \r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <ModalSwitch />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;","import {    \r\n    GET_INGREDIENTS_REQUEST,\r\n    GET_INGREDIENTS_SUCCESS,\r\n    GET_INGREDIENTS_FAILED,\r\n} from '../action-constants/ingredients';\r\n\r\nimport { BASE_URL } from '../../utils/constants';\r\nimport { checkResponse } from '../../utils/utils';\r\nimport { AppThunk, AppDispatch } from '../types';\r\n\r\nexport const getIngredients: AppThunk = (ingredientsURL) => {\r\n    return async (dispatch: AppDispatch) => {\r\n        try{\r\n            dispatch({ \r\n                type: GET_INGREDIENTS_REQUEST \r\n            });\r\n            const res = await fetch(`${BASE_URL}${ingredientsURL}`);\r\n            const json = await checkResponse(res);\r\n\r\n            dispatch({ \r\n                type: GET_INGREDIENTS_SUCCESS, \r\n                ingredients: json.data\r\n            });\r\n        }\r\n        catch(err){\r\n            dispatch({ \r\n                type: GET_INGREDIENTS_FAILED\r\n            }); \r\n        }\r\n    }    \r\n}","import {    \r\n    GET_INGREDIENTS_REQUEST,\r\n    GET_INGREDIENTS_SUCCESS,\r\n    GET_INGREDIENTS_FAILED,\r\n    SET_CURRENT_INGREDIENT,\r\n    ADD_INGREDIENT,\r\n    ADD_BUN,\r\n    DELETE_INGREDIENT,\r\n    RESET_CURRENT_INGREDIENT,\r\n    MOVE_INGREDIENT,\r\n    CLEAR_CONSTRUCTOR_INGREDIENTS,\r\n    SET_INGREDIENTS_TAB\r\n} from '../action-constants/ingredients';\r\n\r\nimport { TIngredientsAction } from '../actions/ingredients';\r\nimport { TProductItem, TTabs } from '../../utils/types';\r\n\r\ntype TIngredientsState = {\r\n    ingredientsRequest: boolean;\r\n    ingredientsFailed: boolean;\r\n    ingredientsData: TProductItem[];\r\n    constructorIngredients: TProductItem[] | undefined[];\r\n    currentIngredient: TProductItem | {};\r\n    tabs: TTabs[];\r\n}\r\n\r\nconst initialIngredientsState = {\r\n    ingredientsRequest: true,\r\n    ingredientsFailed: false,\r\n    ingredientsData: [],\r\n    constructorIngredients: [],\r\n    currentIngredient: {},\r\n    tabs: [\r\n        {\r\n          id: 'bun',\r\n          title: 'Булки',\r\n          ratio: 0\r\n        },\r\n        {\r\n          id: 'sauce',\r\n          title: 'Соусы',\r\n          ratio: 0\r\n        },\r\n        {\r\n          id: 'main',\r\n          title: 'Начинки',\r\n          ratio: 0\r\n        },\r\n    ]\r\n}\r\n\r\nexport default (state = initialIngredientsState, action: TIngredientsAction): TIngredientsState => {\r\n    switch(action.type){\r\n        case GET_INGREDIENTS_REQUEST: {\r\n            return {\r\n                ...state,\r\n                ingredientsRequest: true\r\n            }\r\n        }\r\n        case GET_INGREDIENTS_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                ingredientsData: action.ingredients,\r\n                ingredientsRequest: false\r\n            }\r\n        }\r\n        case GET_INGREDIENTS_FAILED: {\r\n            return {\r\n                ...state,\r\n                ingredientsData: [],\r\n                ingredientsFailed: true,\r\n                ingredientsRequest: false\r\n            }\r\n        }\r\n        case SET_CURRENT_INGREDIENT: {\r\n            return {\r\n                ...state,\r\n                currentIngredient: action.data\r\n            }\r\n        }\r\n        case RESET_CURRENT_INGREDIENT: {\r\n            return {\r\n                ...state,\r\n                currentIngredient: {}\r\n            }\r\n        }\r\n        case ADD_BUN: {\r\n            const currentItem = state.ingredientsData.find((item: TProductItem) => item._id === action.id);\r\n            const itemIndex = state.constructorIngredients.findIndex((product: TProductItem) => \r\n                product.type === 'bun');\r\n\r\n            const newConstructorIngredients = itemIndex === -1 ?\r\n                [...state.constructorIngredients, currentItem] :\r\n                (\r\n                    [...state.constructorIngredients.slice(0, itemIndex),\r\n                        currentItem,\r\n                     ...state.constructorIngredients.slice(itemIndex + 1)]\r\n                );\r\n    \r\n            return {\r\n                ...state,\r\n                constructorIngredients: newConstructorIngredients\r\n            }\r\n        }\r\n        case ADD_INGREDIENT: {            \r\n            const currentItem = state.ingredientsData.find((item: TProductItem) => item._id === action.id);\r\n \r\n            return {\r\n                ...state,\r\n               constructorIngredients: [...state.constructorIngredients, currentItem ] \r\n            }\r\n        }\r\n        case DELETE_INGREDIENT: {\r\n            const itemIndex = state.constructorIngredients.findIndex((product: TProductItem) => \r\n                product._id === action.id);\r\n            \r\n            const newConstructorIngredients = \r\n                [...state.constructorIngredients.slice(0, itemIndex),\r\n                 ...state.constructorIngredients.slice(itemIndex + 1)]\r\n            return {\r\n                ...state,\r\n                constructorIngredients: newConstructorIngredients\r\n            }\r\n        }\r\n        case MOVE_INGREDIENT: {    \r\n            const dragCard = state.constructorIngredients[action.drag];\r\n            const hoverCard = state.constructorIngredients[action.hover];        \r\n            const newConstructorIngredients = [...state.constructorIngredients];\r\n\r\n            newConstructorIngredients[action.drag] = hoverCard;\r\n            newConstructorIngredients[action.hover] = dragCard;\r\n            \r\n            return {\r\n                ...state,\r\n                constructorIngredients: newConstructorIngredients\r\n            }\r\n        }\r\n        case SET_INGREDIENTS_TAB: {\r\n            return {\r\n                ...state,\r\n                tabs: state.tabs.map(tab => \r\n                    tab.id === action.id ? {...tab, ratio: action.ratio} : tab)         \r\n            }\r\n        }\r\n        case CLEAR_CONSTRUCTOR_INGREDIENTS: {\r\n            return {\r\n                ...state,\r\n                constructorIngredients: []\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n}","import {\r\n    SEND_ORDER_REQUEST,\r\n    SEND_ORDER_SUCCESS,\r\n    SEND_ORDER_FAILED,\r\n    RESET_ORDER_REQUEST\r\n} from '../action-constants/order';\r\n\r\nimport { TOrderAction } from '../actions/order';\r\nimport { TOrderResponseData } from '../../utils/types';\r\n\r\ntype TOrderState = {\r\n    orderRequest: boolean;\r\n    orderData: TOrderResponseData | {},\r\n    orderFailed: boolean;\r\n};\r\n\r\nconst initialOrderState = {\r\n    orderRequest: false,\r\n    orderData: {},\r\n    orderFailed: false,\r\n};\r\n\r\nexport default (state = initialOrderState, action: TOrderAction): TOrderState => {\r\n    switch(action.type){\r\n        case SEND_ORDER_REQUEST: {\r\n            return {\r\n                ...state,\r\n                orderRequest: true\r\n            }\r\n        }\r\n        case SEND_ORDER_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                orderRequest: false,\r\n                orderData: action.data,\r\n                orderFailed: false,\r\n            }\r\n        }\r\n        case SEND_ORDER_FAILED: {\r\n            return {\r\n                ...state,\r\n                orderData: {},\r\n                orderRequest: false,\r\n                orderFailed: true\r\n            }\r\n        }\r\n        case RESET_ORDER_REQUEST: {\r\n            return initialOrderState;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    SET_MODAL_DATA,\r\n    SET_MODAL_ERROR,\r\n    CLOSE_MODAL\r\n} from '../action-constants/modal';\r\n\r\nimport { TModalAction } from '../actions/modal';\r\nimport { TOrderResponseData } from '../../utils/types';\r\n\r\ntype TModalState = {\r\n    modalMode: string | null, \r\n    modalTitle: string | null,\r\n    modalData: TOrderResponseData | null,\r\n    hasModalError: boolean;\r\n    modalVisible: boolean;\r\n}\r\n\r\nconst initialModalState = {\r\n    modalMode: null, \r\n    modalTitle: null,\r\n    modalData: null,\r\n    hasModalError: false,\r\n    modalVisible: false\r\n}\r\n\r\nexport default (state = initialModalState, action: TModalAction): TModalState => {\r\n    switch(action.type){\r\n        case SET_MODAL_DATA: {\r\n            return {\r\n                ...state,\r\n                modalMode: action.mode,\r\n                modalTitle: action.title,\r\n                modalData: action.data,\r\n                modalVisible: true,\r\n                hasModalError: false\r\n            }\r\n        }\r\n        case SET_MODAL_ERROR: {\r\n            return {\r\n                ...state,\r\n                hasModalError: true\r\n            }\r\n        }\r\n        case CLOSE_MODAL: {\r\n            return {\r\n                ...state,\r\n                modalVisible: false\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    SET_NAME,\r\n    SET_EMAIL,\r\n    SET_LOGIN,\r\n    SET_PASSWORD,\r\n    SET_RESTORE_EMAIL,\r\n    REGISTER_USER_REQUEST,\r\n    REGISTER_USER_SUCCESS,\r\n    REGISTER_USER_FAILED,\r\n    LOGIN_USER_REQUEST,\r\n    LOGIN_USER_SUCCESS,\r\n    LOGIN_USER_FAILED,\r\n    UPDATE_USER_DATA_REQUEST,\r\n    UPDATE_USER_DATA_SUCCESS,\r\n    UPDATE_USER_DATA_FAILED,\r\n    CANCEL_UPDATE_USER_DATA,\r\n    RESTORE_PASSWORD_REQUEST,\r\n    RESTORE_PASSWORD_SUCCESS,\r\n    RESTORE_PASSWORD_FAILED,    \r\n    GET_NEW_PASSWORD_REQUEST,\r\n    GET_NEW_PASSWORD_SUCCESS,\r\n    GET_NEW_PASSWORD_FAILED,\r\n    SET_NEW_PASSWORD,\r\n    SET_RESTORE_CODE,\r\n    REFRESH_TOKEN_REQUEST,\r\n    REFRESH_TOKEN_SUCCESS,\r\n    REFRESH_TOKEN_FAILED,\r\n    LOGOUT_USER_REQUEST,\r\n    LOGOUT_USER_SUCCESS,\r\n    LOGOUT_USER_FAILED\r\n} from '../action-constants/access';\r\n\r\nimport { TAccessAction } from '../actions/access';\r\n\r\ntype TUserData = {\r\n    name: string;\r\n    email: string;\r\n    login: string;\r\n    password: string;\r\n    newPassword: string;\r\n}\r\ntype TAccessState = {\r\n    user: TUserData;\r\n    registerRequest: boolean;\r\n    registerFailed: boolean;\r\n    loginRequest: boolean;\r\n    loginFailed: boolean;\r\n    userDataRequest: boolean;\r\n    userDataFailed: boolean;\r\n    changePasswordEmail: string;\r\n    changePasswordRequest: boolean;\r\n    changePasswordFailed: boolean;\r\n    changePasswordMessage: string | null;\r\n    newPasswordRequest: boolean;\r\n    newPasswordFailed: boolean;\r\n    restoreCode: string;\r\n    refreshTokenRequest: boolean;\r\n    refreshTokenFailed: boolean;\r\n    logoutRequest: boolean;\r\n    logoutFailed: boolean;\r\n    logoutMessage: string | null;\r\n}\r\n\r\nconst initialAccessState = {\r\n    user: {\r\n        name: '',\r\n        email: '',\r\n        login: '',\r\n        password: '',\r\n        newPassword: '',\r\n    },\r\n    registerRequest: false,\r\n    registerFailed: false,\r\n    loginRequest: false,\r\n    loginFailed: false,\r\n    userDataRequest: false,\r\n    userDataFailed: false,\r\n    changePasswordEmail: '',\r\n    changePasswordRequest: false,\r\n    changePasswordFailed: false,\r\n    changePasswordMessage: null,    \r\n    newPasswordRequest: false,\r\n    newPasswordFailed: false,\r\n    restoreCode: '',\r\n    refreshTokenRequest: false,\r\n    refreshTokenFailed: false,\r\n    logoutRequest: false,\r\n    logoutFailed: false,\r\n    logoutMessage: null\r\n}\r\n\r\nexport default (state = initialAccessState, action: TAccessAction): TAccessState => {\r\n    switch(action.type){\r\n        case SET_NAME: {\r\n            return {\r\n                ...state,\r\n                user: {\r\n                    ...state.user,\r\n                    name: action.payload\r\n                }\r\n            }\r\n        }\r\n        case SET_EMAIL: {\r\n            return {\r\n                ...state,\r\n                user: {\r\n                    ...state.user,\r\n                    email: action.payload\r\n                }\r\n            }\r\n        }\r\n        case SET_LOGIN: {\r\n            return {\r\n                ...state,\r\n                user: {\r\n                    ...state.user,\r\n                    login: action.payload\r\n                }\r\n            }\r\n        }\r\n        case SET_PASSWORD: {\r\n            return {\r\n                ...state,\r\n                user: {\r\n                    ...state.user,\r\n                    password: action.payload\r\n                }\r\n            }\r\n        }\r\n        case SET_RESTORE_EMAIL: {\r\n            return {\r\n                ...state,                \r\n                changePasswordEmail: action.email\r\n            }\r\n        }\r\n        case REGISTER_USER_REQUEST: {\r\n            return {\r\n                ...state,\r\n                registerRequest: true\r\n            }\r\n        }\r\n        case REGISTER_USER_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                user: {\r\n                    ...state.user,\r\n                    name: '',\r\n                    email: '',\r\n                    password: ''\r\n                },\r\n                registerRequest: false,\r\n                registerFailed: false\r\n            }\r\n        }\r\n        case REGISTER_USER_FAILED: {\r\n            return {\r\n                ...state,\r\n                registerRequest: false,\r\n                registerFailed: true\r\n            }\r\n        }\r\n        case LOGIN_USER_REQUEST: {\r\n            return {\r\n                ...state,\r\n                loginRequest: true\r\n            }\r\n        }\r\n        case LOGIN_USER_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                user: {\r\n                    ...state.user,\r\n                    name: action.user.name,\r\n                    email: action.user.email,\r\n                    password: ''\r\n                },\r\n                loginRequest: false,\r\n                loginFailed: false\r\n            }\r\n        }\r\n        case LOGIN_USER_FAILED: {\r\n            return {\r\n                ...state,\r\n                loginRequest: false,\r\n                loginFailed: true\r\n            }\r\n        }\r\n        case UPDATE_USER_DATA_REQUEST: {\r\n            return {\r\n                ...state,\r\n                userDataRequest: true\r\n            }\r\n        }\r\n        case UPDATE_USER_DATA_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                userDataRequest: false,\r\n                userDataFailed: false,\r\n                user: {\r\n                    ...state.user,\r\n                    name: action.user.name,\r\n                    email: action.user.email,\r\n                    password: ''\r\n                }\r\n            }\r\n        }\r\n        case UPDATE_USER_DATA_FAILED: {\r\n            return {\r\n                ...state,\r\n                userDataRequest: false,\r\n                userDataFailed: true\r\n            }\r\n        }\r\n        case CANCEL_UPDATE_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                user: {\r\n                    ...state.user,\r\n                    login: '',\r\n                    password: ''\r\n                }\r\n            }\r\n        }\r\n        case RESTORE_PASSWORD_REQUEST: {\r\n            return {\r\n                ...state,                \r\n                changePasswordRequest: true\r\n            }\r\n        }\r\n        case RESTORE_PASSWORD_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                changePasswordRequest: false,\r\n                changePasswordFailed: false,\r\n                changePasswordMessage: action.message,\r\n                changePasswordEmail: ''\r\n            }\r\n        }\r\n        case RESTORE_PASSWORD_FAILED: {\r\n            return {\r\n                ...state,\r\n                changePasswordRequest: false,\r\n                changePasswordFailed: true,\r\n                changePasswordMessage: null\r\n            }\r\n        }\r\n        case SET_NEW_PASSWORD: {\r\n            return {\r\n                ...state,\r\n                user: {\r\n                    ...state.user,\r\n                    newPassword: action.payload\r\n                }\r\n            }\r\n        }\r\n        case SET_RESTORE_CODE: {\r\n            return {\r\n                ...state,\r\n                restoreCode: action.payload\r\n            }\r\n        }       \r\n        case GET_NEW_PASSWORD_REQUEST: {\r\n            return {\r\n                ...state,\r\n                newPasswordRequest: true,\r\n                user: {\r\n                    ...state.user,\r\n                    newPassword: ''\r\n                }\r\n            }\r\n        }\r\n        case GET_NEW_PASSWORD_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                newPasswordRequest: false,\r\n                newPasswordFailed: false            \r\n            }\r\n        }\r\n        case GET_NEW_PASSWORD_FAILED: {\r\n            return {\r\n                ...state,\r\n                newPasswordRequest: false,\r\n                newPasswordFailed: true\r\n            }\r\n        }\r\n        case REFRESH_TOKEN_REQUEST: {\r\n            return {\r\n                ...state,\r\n                refreshTokenRequest: true\r\n            }\r\n        }\r\n        case REFRESH_TOKEN_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                refreshTokenRequest: false,\r\n                refreshTokenFailed: false\r\n            }\r\n        }\r\n        case REFRESH_TOKEN_FAILED: {\r\n            return {\r\n                ...state,\r\n                refreshTokenRequest: false,\r\n                refreshTokenFailed: true\r\n            }\r\n        }\r\n        case LOGOUT_USER_REQUEST: {\r\n            return {\r\n                ...state,\r\n                logoutRequest: true\r\n            }\r\n        }\r\n        case LOGOUT_USER_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                user: {\r\n                    ...state.user\r\n                },\r\n                logoutRequest: false,\r\n                logoutFailed: false,\r\n                logoutMessage: action.message                \r\n            }\r\n        }\r\n        case LOGOUT_USER_FAILED: {\r\n            return {\r\n                ...state,\r\n                user: {\r\n                    ...state.user\r\n                },\r\n                logoutRequest: false,\r\n                logoutFailed: true\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n}","import {\r\n    WS_CONNECTION_START,\r\n    WS_CONNECTION_SUCCESS,\r\n    WS_CONNECTION_ERROR,\r\n    WS_CONNECTION_CLOSED,\r\n    WS_GET_ORDERS\r\n} from '../action-constants/ws';\r\n\r\nimport { TWSOrder, TWSOrdersResponse } from '../../utils/types';\r\nimport { TWSOrdersActions } from '../actions/ws';\r\nimport { restorePassword } from '../thunks/access';\r\n\r\ntype TWSState = {\r\n    wsConnected: boolean;\r\n    orders: TWSOrder[];\r\n    total: number;\r\n    totalToday: number;\r\n    error?: Event;\r\n};\r\n  \r\nconst initialState: TWSState = {\r\n    wsConnected: false,\r\n    orders: [],\r\n    total: 0,\r\n    totalToday: 0\r\n};\r\n\r\nexport default (state = initialState, action: TWSOrdersActions): TWSState => {\r\n    switch(action.type){\r\n        case WS_CONNECTION_START: {\r\n            return {\r\n                ...state,                \r\n            }\r\n        }\r\n        case WS_CONNECTION_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                wsConnected: true\r\n            }\r\n        }\r\n        case WS_CONNECTION_ERROR: {\r\n            return {\r\n                ...state,\r\n                wsConnected: false\r\n            }\r\n        }\r\n        case WS_CONNECTION_CLOSED: {\r\n            return {\r\n                ...state,\r\n                wsConnected: false\r\n            }\r\n        }\r\n        case WS_GET_ORDERS: {\r\n            return {\r\n                ...state,\r\n                orders: action.payload.orders,\r\n                total: action.payload.total,\r\n                totalToday: action.payload.totalToday\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport ingredients from './ingredients';\r\nimport order from './order';\r\nimport modal from './modal';\r\nimport access from './access';\r\nimport ws from './ws';\r\n\r\nconst rootReducer = combineReducers({\r\n    ingredients,\r\n    modal,\r\n    order,\r\n    access,\r\n    ws\r\n});\r\n\r\nexport default rootReducer;","import { compose, createStore, applyMiddleware } from 'redux';\r\nimport rootReducer from './reducers';\r\nimport thunk from 'redux-thunk';\r\nimport { socketMiddleware } from './middleware/socketMiddleware';\r\n\r\nimport {\r\n  WS_CONNECTION_START,\r\n  WS_CONNECTION_SUCCESS,\r\n  WS_CONNECTION_ERROR,\r\n  WS_CONNECTION_CLOSED,\r\n  WS_GET_ORDERS,\r\n  WS_SEND_ORDER\r\n} from './action-constants/ws';\r\n\r\nconst wsActions = {\r\n  wsInit: WS_CONNECTION_START,\r\n  wsSendOrder: WS_SEND_ORDER,\r\n  onOpen: WS_CONNECTION_SUCCESS,\r\n  onClose: WS_CONNECTION_CLOSED,\r\n  onError: WS_CONNECTION_ERROR,\r\n  onMessage: WS_GET_ORDERS\r\n};\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\r\n    : compose;\r\nconst enhancer = composeEnhancers(applyMiddleware(\r\n  thunk,\r\n  socketMiddleware(wsActions)\r\n));\r\n\r\nexport const store = createStore(rootReducer, enhancer); \r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/app/app';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './services/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burgerConstructor\":\"burger-constructor_burgerConstructor__3dG_0\",\"list\":\"burger-constructor_list__3acIu\",\"listHover\":\"burger-constructor_listHover__3gwQt\",\"bun\":\"burger-constructor_bun__18xdP\",\"bunTop\":\"burger-constructor_bunTop__2q4fJ\",\"bunBottom\":\"burger-constructor_bunBottom__3mdbA\",\"listItem\":\"burger-constructor_listItem__blxLB\",\"total\":\"burger-constructor_total__2F4Fi\",\"totalPrice\":\"burger-constructor_totalPrice__1pClJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orderBlock\":\"order-block_orderBlock__2aPOF\",\"meta\":\"order-block_meta__2csP7\",\"date\":\"order-block_date__1xH4F\",\"title\":\"order-block_title__2eyf8\",\"info\":\"order-block_info__2RO_F\",\"status\":\"order-block_status__2eBN3\",\"statusDone\":\"order-block_statusDone__2avIh\",\"priceBlock\":\"order-block_priceBlock__25WJH\",\"icons\":\"order-block_icons__upMzA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stats\":\"stats_stats__5nnpd\",\"orders\":\"stats_orders__kEq6W\",\"numbers\":\"stats_numbers__2OWF-\",\"allNumbers\":\"stats_allNumbers__37Rja\",\"num\":\"stats_num__SIlUr\",\"inProgress\":\"stats_inProgress__1GsYx\",\"done\":\"stats_done__25rch\",\"totalTitle\":\"stats_totalTitle__2JeTo\",\"total\":\"stats_total__V6pwa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orderStats\":\"order-stats_orderStats__2gVW8\",\"number\":\"order-stats_number__3h8Te\",\"ingredientsList\":\"order-stats_ingredientsList__11lCv\",\"statusDone\":\"order-stats_statusDone__17ieG\",\"data\":\"order-stats_data__2w__w\",\"date\":\"order-stats_date__1lNfE\",\"priceBlock\":\"order-stats_priceBlock__2La99\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredientDetails\":\"ingredient-details_ingredientDetails__5PJDY\",\"titleContainer\":\"ingredient-details_titleContainer__3yups\",\"box\":\"ingredient-details_box__3z97H\",\"title\":\"ingredient-details_title__OdV3B\",\"center\":\"ingredient-details_center__1XJsZ\",\"image\":\"ingredient-details_image__2TD7v\",\"name\":\"ingredient-details_name__3Lmfo\",\"nutritionFacts\":\"ingredient-details_nutritionFacts__1kLju\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemCart\":\"item-cart_itemCart__2uc8A\",\"itemCartContainer\":\"item-cart_itemCartContainer__AoHYA\",\"price\":\"item-cart_price__rWEEA\",\"name\":\"item-cart_name__D5OA-\",\"image\":\"item-cart_image__pCnMt\",\"link\":\"item-cart_link__3Xkev\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"orders-list_list__1o3z1\",\"link\":\"orders-list_link__1jT9p\",\"wide\":\"orders-list_wide__111q5\",\"wideLink\":\"orders-list_wideLink__20AZ2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredientsLine\":\"ingredients-line_ingredientsLine__2diuD\",\"itemData\":\"ingredients-line_itemData__2IohB\",\"priceBlock\":\"ingredients-line_priceBlock__SXrCY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orderDetails\":\"order-details_orderDetails__ET7zw\",\"loading\":\"order-details_loading__3kEiJ\",\"num\":\"order-details_num__1y5xE\",\"text\":\"order-details_text__3Qyar\",\"image\":\"order-details_image__2YAkm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"constructorItem\":\"constructor-item_constructorItem__38HLb\",\"bun\":\"constructor-item_bun__3khK2\",\"settings\":\"constructor-item_settings__3-Tf5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"ingredient-icon_icon__1u772\",\"overlay\":\"ingredient-icon_overlay__nV2fw\",\"shift-1\":\"ingredient-icon_shift-1__3Yfce\",\"shift-2\":\"ingredient-icon_shift-2__3o5FA\",\"shift-3\":\"ingredient-icon_shift-3__2U-Gc\",\"shift-4\":\"ingredient-icon_shift-4__1NY2U\",\"shift-5\":\"ingredient-icon_shift-5__NcrwK\",\"rest\":\"ingredient-icon_rest__1pb1S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"page_title__1GmdM\",\"main\":\"page_main__1G9IE\",\"feed\":\"page_feed__1Y6PM\",\"content\":\"page_content__30-T4\",\"container\":\"page_container__13E6O\",\"inputLarge\":\"page_inputLarge__2vPmJ\",\"questions\":\"page_questions__4uI-4\",\"question\":\"page_question__2ujww\",\"link\":\"page_link__1jHUH\",\"orderStatsPage\":\"page_orderStatsPage__3m-sP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fact\":\"fact_fact__2BS2O\",\"text\":\"fact_text__2QGrD\",\"wide\":\"fact_wide__ZngV6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appHeader\":\"app-header_appHeader__3K5er\",\"appHeaderContainer\":\"app-header_appHeaderContainer__13BoM\",\"logo\":\"app-header_logo__ocJ26\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burgerIngredients\":\"burger-ingredients_burgerIngredients__2rXnZ\",\"ingredients\":\"burger-ingredients_ingredients__1ayXP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"spinner_spinner__2y99-\",\"lds-roller\":\"spinner_lds-roller__2XzLq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navButton\":\"nav-button_navButton__1tH1a\",\"title\":\"nav-button_title__3hZF5\",\"active\":\"nav-button_active__3Td1q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"modal_modal__3oczP\",\"close\":\"modal_close__3gVus\"};"],"sourceRoot":""}